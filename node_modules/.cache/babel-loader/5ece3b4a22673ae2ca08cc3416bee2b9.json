{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\gpsproject_frontend-main\\\\src\\\\components\\\\track.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useJsApiLoader, GoogleMap, Marker, DirectionsRenderer } from \"@react-google-maps/api\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport \"./Alldummy.css\";\nconst center = {\n  lat: 17.08959447599296,\n  lng: 82.06681022400967\n};\nconst libraries = [\"places\"];\n\nconst Track = ({\n  onLiveTracking,\n  origin,\n  destination\n}) => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_NEW_API_KEY\",\n    // ðŸ”‘ Replace with new API key\n    libraries\n  });\n  const [directionResponse, setDirectionResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const mapRef = useRef(null);\n  useEffect(() => {\n    if (origin && destination && isLoaded) {\n      calculateRoute(origin, destination);\n    }\n  }, [origin, destination, isLoaded]);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  async function calculateRoute(originAddress, destinationAddress) {\n    if (!window.google) {\n      console.error(\"Google Maps API is not loaded.\");\n      return;\n    }\n\n    const directionService = new window.google.maps.DirectionsService();\n\n    try {\n      var _results$routes;\n\n      const results = await directionService.route({\n        origin: originAddress,\n        destination: destinationAddress,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      });\n\n      if ((results === null || results === void 0 ? void 0 : (_results$routes = results.routes) === null || _results$routes === void 0 ? void 0 : _results$routes.length) > 0) {\n        setDirectionResponse(results);\n        setDistance(results.routes[0].legs[0].distance.text);\n        setDuration(results.routes[0].legs[0].duration.text);\n      } else {\n        console.error(\"No routes found\", results);\n        setDirectionResponse(null);\n        setDistance(\"Not Calculated\");\n        setDuration(\"Not Calculated\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching directions:\", error);\n      setDirectionResponse(null);\n      setDistance(\"Error\");\n      setDuration(\"Error\");\n    }\n  }\n\n  function clearRoute() {\n    setDirectionResponse(null);\n    setDistance(\"\");\n    setDuration(\"\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    center: center,\n    zoom: 15,\n    mapContainerStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    onLoad: map => mapRef.current = map,\n    options: {\n      zoomControl: true,\n      streetViewControl: false,\n      mapTypeControl: false,\n      fullscreenControl: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), directionResponse && /*#__PURE__*/React.createElement(DirectionsRenderer, {\n    directions: directionResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mapOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearRoute,\n    className: \"clearButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"placeInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Route Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Origin:\"), \" \", origin || \"Not Specified\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Destination:\"), \" \", destination || \"Not Specified\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Distance:\"), \" \", distance || \"Not Calculated\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Duration:\"), \" \", duration || \"Not Calculated\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      var _mapRef$current;\n\n      return (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(center);\n    },\n    className: \"locationButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaLocationArrow, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"liveTrackingButton\",\n    onClick: onLiveTracking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Live Tracking\"));\n};\n\nexport default Track;","map":{"version":3,"sources":["C:/Desktop/gpsproject_frontend-main/src/components/track.js"],"names":["React","useRef","useState","useEffect","useJsApiLoader","GoogleMap","Marker","DirectionsRenderer","FaLocationArrow","FaTimes","center","lat","lng","libraries","Track","onLiveTracking","origin","destination","isLoaded","googleMapsApiKey","directionResponse","setDirectionResponse","distance","setDistance","duration","setDuration","mapRef","calculateRoute","originAddress","destinationAddress","window","google","console","error","directionService","maps","DirectionsService","results","route","travelMode","TravelMode","DRIVING","routes","length","legs","text","clearRoute","width","height","map","current","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","panTo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  useJsApiLoader,\n  GoogleMap,\n  Marker,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport \"./Alldummy.css\";\n\nconst center = { lat: 17.08959447599296, lng: 82.06681022400967 };\nconst libraries = [\"places\"];\n\nconst Track = ({ onLiveTracking, origin, destination }) => {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_NEW_API_KEY\", // ðŸ”‘ Replace with new API key\n    libraries,\n  });\n\n  const [directionResponse, setDirectionResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    if (origin && destination && isLoaded) {\n      calculateRoute(origin, destination);\n    }\n  }, [origin, destination, isLoaded]);\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  async function calculateRoute(originAddress, destinationAddress) {\n    if (!window.google) {\n      console.error(\"Google Maps API is not loaded.\");\n      return;\n    }\n\n    const directionService = new window.google.maps.DirectionsService();\n\n    try {\n      const results = await directionService.route({\n        origin: originAddress,\n        destination: destinationAddress,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      });\n\n      if (results?.routes?.length > 0) {\n        setDirectionResponse(results);\n        setDistance(results.routes[0].legs[0].distance.text);\n        setDuration(results.routes[0].legs[0].duration.text);\n      } else {\n        console.error(\"No routes found\", results);\n        setDirectionResponse(null);\n        setDistance(\"Not Calculated\");\n        setDuration(\"Not Calculated\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching directions:\", error);\n      setDirectionResponse(null);\n      setDistance(\"Error\");\n      setDuration(\"Error\");\n    }\n  }\n\n  function clearRoute() {\n    setDirectionResponse(null);\n    setDistance(\"\");\n    setDuration(\"\");\n  }\n\n  return (\n    <div className=\"container1\">\n      <div className=\"mapContainer\">\n        <GoogleMap\n          center={center}\n          zoom={15}\n          mapContainerStyle={{ width: \"100%\", height: \"100%\" }}\n          onLoad={(map) => (mapRef.current = map)}\n          options={{\n            zoomControl: true,\n            streetViewControl: false,\n            mapTypeControl: false,\n            fullscreenControl: false,\n          }}\n        >\n          <Marker position={center} />\n          {directionResponse && (\n            <DirectionsRenderer directions={directionResponse} />\n          )}\n        </GoogleMap>\n      </div>\n\n      <div className=\"mapOptions\">\n        <button onClick={clearRoute} className=\"clearButton\">\n          <FaTimes size={20} />\n        </button>\n\n        <div className=\"info\">\n          <div className=\"placeInfo\">\n            <h4>Route Information</h4>\n            <p>\n              <strong>Origin:</strong> {origin || \"Not Specified\"}\n            </p>\n            <p>\n              <strong>Destination:</strong> {destination || \"Not Specified\"}\n            </p>\n            <p>\n              <strong>Distance:</strong> {distance || \"Not Calculated\"}\n            </p>\n            <p>\n              <strong>Duration:</strong> {duration || \"Not Calculated\"}\n            </p>\n          </div>\n        </div>\n\n        <button\n          onClick={() => mapRef.current?.panTo(center)}\n          className=\"locationButton\"\n        >\n          <FaLocationArrow size={20} />\n        </button>\n      </div>\n\n      <button className=\"liveTrackingButton\" onClick={onLiveTracking}>\n        Live Tracking\n      </button>\n    </div>\n  );\n};\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}