{"ast":null,"code":"// import React, { Component } from 'react';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         // Basic password validation (you can extend it)\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         // Simulating password change (you can replace this with API call)\n//         console.log('Password successfully changed');\n//         this.setState({ \n//             currentPassword: '', \n//             newPassword: '', \n//             confirmNewPassword: '', \n//             errorMessage: '' \n//         });\n//     };\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-body-container\">\n//                 {/* Apply background to this div */}\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>DIVYA</h3>\n//                             <p>Student</p>\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> 123456</p>\n//                                 <p><strong>Bus No:</strong> 111</p>\n//                             </div>\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Student Name</label>\n//                                             <input type=\"text\" value=\"John Doe\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Roll Number</label>\n//                                             <input type=\"text\" value=\"123456\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Email</label>\n//                                             <input type=\"email\" value=\"john.doe@example.com\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Campus</label>\n//                                             <input type=\"text\" value=\"ABC Campus\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5'\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             // Simulating API call to change the password\n//             // Replace with actual API call\n//             await axios.post('http://localhost:9001/changePassword', { currentPassword, newPassword });\n//             console.log('Password successfully changed');\n//             this.setState({ \n//                 currentPassword: '', \n//                 newPassword: '', \n//                 confirmNewPassword: '', \n//                 errorMessage: '' \n//             });\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: 'Failed to change password' });\n//         }\n//     };\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage, studentDetails, loading, fetchError } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//             <div className=\"profile-body-container\">\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>{loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n//                             <p>Student</p>\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> {loading ? '...' : (studentDetails ? studentDetails.rollno : 'N/A')}</p>\n//                                 <p><strong>Bus No:</strong>  {loading ? '...' : (studentDetails ? studentDetails.busno : 'N/A')}</p>\n//                             </div>\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     {loading ? (\n//                                         <p>Loading...</p>\n//                                     ) : (\n//                                         <form>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Student Name</label>\n//                                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Roll Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Email</label>\n//                                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Campus</label>\n//                                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Phone Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                                             </div>\n//                                         </form>\n//                                     )}\n//                                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderBusDetails = () => {\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     <form>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Number</label>\n//                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Starting Time</label>\n//                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Route</label>\n//                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Ground</label>\n//                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Name</label>\n//                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Phone Number</label>\n//                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Live Tracking</label>\n//                             <div className=\"live-tracking-placeholder\">\n//                                 <p>Live tracking will be available soon...</p>\n//                             </div>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     render() {\n//         const { activeTab } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     fetchBusDetails = async (busNumber) => {\n//         if (busNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n//                 this.setState({ busDetails: response.data });\n//             } catch (error) {\n//                 console.error('Error fetching bus details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch bus details' });\n//             }\n//         }\n//     };\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     // renderBusDetails = () => {\n//     //     return (\n//     //         <div className=\"profile-details-form\">\n//     //             <div className=\"profile-section-pro\">\n//     //                 <h4>Bus Details</h4>\n//     //                 <form>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Number</label>\n//     //                         <input type=\"text\" value=\"Bus 123\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Starting Time</label>\n//     //                         <input type=\"text\" value=\"7:30 AM\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Route</label>\n//     //                         <input type=\"text\" value=\"Route 1\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Ground</label>\n//     //                         <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Name</label>\n//     //                         <input type=\"text\" value=\"John Smith\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Phone Number</label>\n//     //                         <input type=\"text\" value=\"+1234567890\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Live Tracking</label>\n//     //                         <div className=\"live-tracking-placeholder\">\n//     //                             <p>Live tracking will be available soon...</p>\n//     //                         </div>\n//     //                     </div>\n//     //                 </form>\n//     //             </div>\n//     //         </div>\n//     //     );\n//     // };\n//     renderBusDetails = () => {\n//         const { busDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     {busDetails ? (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Number</label>\n//                                 <input type=\"text\" value={busDetails.busno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Starting Time</label>\n//                                 <input type=\"text\" value={busDetails.busstartingtime || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Route</label>\n//                                 <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Ground</label>\n//                                 <input type=\"text\" value={busDetails.busground || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Name</label>\n//                                 <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Phone Number</label>\n//                                 <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Live Tracking</label>\n//                                 <div className=\"live-tracking-placeholder\">\n//                                     <p>Live tracking will be available soon...</p>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     ) : (\n//                         <p>{fetchError}</p>\n//                     )}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     render() {\n//         const { activeTab } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\nimport React,{Component}from'react';import axios from'../axios';import Navbar from'./global-components/navbar-v5';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class Profile extends Component{constructor(){super(...arguments);this.state={activeTab:'student',// State to manage active tab\ncurrentPassword:'',newPassword:'',confirmNewPassword:'',errorMessage:'',studentDetails:null,busDetails:null,loading:true,fetchError:''};// Fetch student details from the API\nthis.fetchStudentDetails=async()=>{const rollNumber=localStorage.getItem('rollNumber');if(rollNumber){try{// const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\nconst response=await axios.get(\"/getStudentDetails/\".concat(rollNumber));this.setState({studentDetails:response.data,loading:false});if(response.data.busno){this.fetchBusDetails(response.data.busno);}}catch(error){console.error('Error fetching student details:',error);this.setState({fetchError:'Failed to fetch student details',loading:false});}}else{this.setState({fetchError:'Roll number not found in local storage',loading:false});}};// Fetch bus details based on the bus number\nthis.fetchBusDetails=async busNumber=>{try{// const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\nconst response=await axios.get(\"/getBusDetails/\".concat(busNumber));this.setState({busDetails:response.data});}catch(error){console.error('Error fetching bus details:',error);this.setState({fetchError:'Failed to fetch bus details'});}};// Handle input changes for password fields\nthis.handleInputChange=e=>{this.setState({[e.target.name]:e.target.value});};// Handle password change submission\nthis.handlePasswordSubmit=async e=>{e.preventDefault();const{currentPassword,newPassword,confirmNewPassword}=this.state;const rollNumber=localStorage.getItem('rollNumber');if(newPassword!==confirmNewPassword){this.setState({errorMessage:'New password and confirm password do not match!'});return;}try{// const response = await axios.post('http://localhost:9001/changePassword', {\nconst response=await axios.post('/changePassword',{rollno:rollNumber,currentPassword,newPassword});this.setState({currentPassword:'',newPassword:'',confirmNewPassword:'',errorMessage:''});alert(response.data.message);}catch(error){var _error$response,_error$response$data;console.error('Error changing password:',error);this.setState({errorMessage:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to change password'});}};// Handle tab switching\nthis.handleTabSwitch=tab=>{this.setState({activeTab:tab});};this.renderStudentDetails=()=>{const{loading,studentDetails,fetchError}=this.state;return/*#__PURE__*/_jsx(\"div\",{className:\"profile-details-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section-pro\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Student Details\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Student Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:(studentDetails===null||studentDetails===void 0?void 0:studentDetails.name)||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Roll Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:(studentDetails===null||studentDetails===void 0?void 0:studentDetails.rollno)||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:(studentDetails===null||studentDetails===void 0?void 0:studentDetails.email)||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Campus\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:(studentDetails===null||studentDetails===void 0?void 0:studentDetails.campus)||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Phone Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:(studentDetails===null||studentDetails===void 0?void 0:studentDetails.phoneno)||'',readOnly:true})]})]}),fetchError&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:fetchError})]})});};this.renderBusDetails=()=>{const{busDetails,fetchError}=this.state;return/*#__PURE__*/_jsx(\"div\",{className:\"profile-details-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section-pro\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Bus Details\"}),busDetails?/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bus Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.busno||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bus Starting Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.bustartingtime||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bus Route\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.busroute||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bus Ground\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.busground||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Driver Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.drivername||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Driver Phone Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:busDetails.driverphone||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Live Tracking\"}),/*#__PURE__*/_jsx(\"div\",{className:\"live-tracking-placeholder\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Live tracking will be available soon...\"})})]})]}):/*#__PURE__*/_jsx(\"p\",{children:fetchError})]})});};this.renderChangePassword=()=>{const{currentPassword,newPassword,confirmNewPassword,errorMessage}=this.state;return/*#__PURE__*/_jsx(\"div\",{className:\"profile-details-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section-pro\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Change Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handlePasswordSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Current Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"currentPassword\",value:currentPassword,onChange:this.handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"newPassword\",value:newPassword,onChange:this.handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-pro\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmNewPassword\",value:confirmNewPassword,onChange:this.handleInputChange,required:true})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-password-btn\",children:\"Change Password\"})]})]})});};}componentDidMount(){this.fetchStudentDetails();}render(){const{activeTab,studentDetails}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-body-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container-pro\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-left-side\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card-pro\",children:[/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'/assets/images/testimonials/testimonial-2-2.png',alt:\"Profile Icon\",className:\"profile-pic-pro\"}),/*#__PURE__*/_jsx(\"h3\",{children:this.state.loading?'Loading...':studentDetails?studentDetails.name:'Student'}),/*#__PURE__*/_jsx(\"p\",{children:\"Student\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-pro\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Roll No:\"}),\" \",studentDetails?studentDetails.rollno:'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bus No:\"}),\" \",studentDetails?studentDetails.busno:'N/A']})]}),/*#__PURE__*/_jsx(\"button\",{className:\"view-profile-btn-pro\",children:\"Live Tracking\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-right-side\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tabs-pro\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn-pro \".concat(activeTab==='student'?'active':''),onClick:()=>this.handleTabSwitch('student'),children:\"Student Details\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn-pro \".concat(activeTab==='bus'?'active':''),onClick:()=>this.handleTabSwitch('bus'),children:\"Bus Details\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn-pro \".concat(activeTab==='password'?'active':''),onClick:()=>this.handleTabSwitch('password'),children:\"Change Password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='student'&&this.renderStudentDetails(),activeTab==='bus'&&this.renderBusDetails(),activeTab==='password'&&this.renderChangePassword()]})]})]})})]});}}export default Profile;","map":{"version":3,"names":["React","Component","axios","Navbar","jsx","_jsx","jsxs","_jsxs","Profile","constructor","arguments","state","activeTab","currentPassword","newPassword","confirmNewPassword","errorMessage","studentDetails","busDetails","loading","fetchError","fetchStudentDetails","rollNumber","localStorage","getItem","response","get","concat","setState","data","busno","fetchBusDetails","error","console","busNumber","handleInputChange","e","target","name","value","handlePasswordSubmit","preventDefault","post","rollno","alert","message","_error$response","_error$response$data","handleTabSwitch","tab","renderStudentDetails","className","children","type","readOnly","email","campus","phoneno","style","color","renderBusDetails","bustartingtime","busroute","busground","drivername","driverphone","renderChangePassword","onSubmit","onChange","required","componentDidMount","render","src","process","env","PUBLIC_URL","alt","onClick"],"sources":["C:/Desktop/gpsproject_frontend-main/src/components/profile.js"],"sourcesContent":["// import React, { Component } from 'react';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n\n//         // Basic password validation (you can extend it)\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         // Simulating password change (you can replace this with API call)\n//         console.log('Password successfully changed');\n//         this.setState({ \n//             currentPassword: '', \n//             newPassword: '', \n//             confirmNewPassword: '', \n//             errorMessage: '' \n//         });\n//     };\n\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n\n//         return (\n//             <div className=\"profile-body-container\">\n//                 {/* Apply background to this div */}\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>DIVYA</h3>\n//                             <p>Student</p>\n\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> 123456</p>\n//                                 <p><strong>Bus No:</strong> 111</p>\n//                             </div>\n\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Student Name</label>\n//                                             <input type=\"text\" value=\"John Doe\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Roll Number</label>\n//                                             <input type=\"text\" value=\"123456\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Email</label>\n//                                             <input type=\"email\" value=\"john.doe@example.com\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Campus</label>\n//                                             <input type=\"text\" value=\"ABC Campus\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5'\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             // Simulating API call to change the password\n//             // Replace with actual API call\n//             await axios.post('http://localhost:9001/changePassword', { currentPassword, newPassword });\n//             console.log('Password successfully changed');\n//             this.setState({ \n//                 currentPassword: '', \n//                 newPassword: '', \n//                 confirmNewPassword: '', \n//                 errorMessage: '' \n//             });\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: 'Failed to change password' });\n//         }\n//     };\n\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage, studentDetails, loading, fetchError } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n\n//             <div className=\"profile-body-container\">\n\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>{loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n//                             <p>Student</p>\n\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> {loading ? '...' : (studentDetails ? studentDetails.rollno : 'N/A')}</p>\n//                                 <p><strong>Bus No:</strong>  {loading ? '...' : (studentDetails ? studentDetails.busno : 'N/A')}</p>\n//                             </div>\n\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     {loading ? (\n//                                         <p>Loading...</p>\n//                                     ) : (\n//                                         <form>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Student Name</label>\n//                                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Roll Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Email</label>\n//                                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Campus</label>\n//                                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Phone Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                                             </div>\n//                                         </form>\n//                                     )}\n//                                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     renderBusDetails = () => {\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     <form>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Number</label>\n//                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Starting Time</label>\n//                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Route</label>\n//                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Ground</label>\n//                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Name</label>\n//                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Phone Number</label>\n//                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Live Tracking</label>\n//                             <div className=\"live-tracking-placeholder\">\n//                                 <p>Live tracking will be available soon...</p>\n//                             </div>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     render() {\n//         const { activeTab } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     fetchBusDetails = async (busNumber) => {\n//         if (busNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n//                 this.setState({ busDetails: response.data });\n//             } catch (error) {\n//                 console.error('Error fetching bus details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch bus details' });\n//             }\n//         }\n//     };\n\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     // renderBusDetails = () => {\n//     //     return (\n//     //         <div className=\"profile-details-form\">\n//     //             <div className=\"profile-section-pro\">\n//     //                 <h4>Bus Details</h4>\n//     //                 <form>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Number</label>\n//     //                         <input type=\"text\" value=\"Bus 123\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Starting Time</label>\n//     //                         <input type=\"text\" value=\"7:30 AM\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Route</label>\n//     //                         <input type=\"text\" value=\"Route 1\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Ground</label>\n//     //                         <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Name</label>\n//     //                         <input type=\"text\" value=\"John Smith\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Phone Number</label>\n//     //                         <input type=\"text\" value=\"+1234567890\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Live Tracking</label>\n//     //                         <div className=\"live-tracking-placeholder\">\n//     //                             <p>Live tracking will be available soon...</p>\n//     //                         </div>\n//     //                     </div>\n//     //                 </form>\n//     //             </div>\n//     //         </div>\n//     //     );\n//     // };\n//     renderBusDetails = () => {\n//         const { busDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     {busDetails ? (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Number</label>\n//                                 <input type=\"text\" value={busDetails.busno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Starting Time</label>\n//                                 <input type=\"text\" value={busDetails.busstartingtime || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Route</label>\n//                                 <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Ground</label>\n//                                 <input type=\"text\" value={busDetails.busground || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Name</label>\n//                                 <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Phone Number</label>\n//                                 <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Live Tracking</label>\n//                                 <div className=\"live-tracking-placeholder\">\n//                                     <p>Live tracking will be available soon...</p>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     ) : (\n//                         <p>{fetchError}</p>\n//                     )}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     render() {\n//         const { activeTab } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\nimport React, { Component } from 'react';\nimport axios from '../axios';\nimport Navbar from './global-components/navbar-v5';\n\nclass Profile extends Component {\n    state = {\n        activeTab: 'student', // State to manage active tab\n        currentPassword: '',\n        newPassword: '',\n        confirmNewPassword: '',\n        errorMessage: '',\n        studentDetails: null,\n        busDetails: null,\n        loading: true,\n        fetchError: '',\n    };\n\n    componentDidMount() {\n        this.fetchStudentDetails();\n    }\n\n    // Fetch student details from the API\n    fetchStudentDetails = async () => {\n        const rollNumber = localStorage.getItem('rollNumber');\n        if (rollNumber) {\n            try {\n                // const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n                const response = await axios.get(`/getStudentDetails/${rollNumber}`);\n                this.setState({ studentDetails: response.data, loading: false });\n                if (response.data.busno) {\n                    this.fetchBusDetails(response.data.busno);\n                }\n            } catch (error) {\n                console.error('Error fetching student details:', error);\n                this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n            }\n        } else {\n            this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n        }\n    };\n\n    // Fetch bus details based on the bus number\n    fetchBusDetails = async (busNumber) => {\n        try {\n            // const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n            const response = await axios.get(`/getBusDetails/${busNumber}`);\n            this.setState({ busDetails: response.data });\n        } catch (error) {\n            console.error('Error fetching bus details:', error);\n            this.setState({ fetchError: 'Failed to fetch bus details' });\n        }\n    };\n\n    // Handle input changes for password fields\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    // Handle password change submission\n    handlePasswordSubmit = async (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmNewPassword } = this.state;\n        const rollNumber = localStorage.getItem('rollNumber');\n\n        if (newPassword !== confirmNewPassword) {\n            this.setState({ errorMessage: 'New password and confirm password do not match!' });\n            return;\n        }\n\n        try {\n            // const response = await axios.post('http://localhost:9001/changePassword', {\n            const response = await axios.post('/changePassword', {\n                rollno: rollNumber,\n                currentPassword,\n                newPassword,\n            });\n            this.setState({\n                currentPassword: '',\n                newPassword: '',\n                confirmNewPassword: '',\n                errorMessage: '',\n            });\n            alert(response.data.message);\n        } catch (error) {\n            console.error('Error changing password:', error);\n            this.setState({ errorMessage: error.response?.data?.message || 'Failed to change password' });\n        }\n    };\n\n    // Handle tab switching\n    handleTabSwitch = (tab) => {\n        this.setState({ activeTab: tab });\n    };\n\n    renderStudentDetails = () => {\n        const { loading, studentDetails, fetchError } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Student Details</h4>\n                    {loading ? (\n                        <p>Loading...</p>\n                    ) : (\n                        <form>\n                            <div className=\"form-group-pro\">\n                                <label>Student Name</label>\n                                <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Roll Number</label>\n                                <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Email</label>\n                                <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Campus</label>\n                                <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Phone Number</label>\n                                <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n                            </div>\n                        </form>\n                    )}\n                    {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n                </div>\n            </div>\n        );\n    };\n\n    renderBusDetails = () => {\n        const { busDetails, fetchError } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Bus Details</h4>\n                    {busDetails ? (\n                        <form>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Number</label>\n                                <input type=\"text\" value={busDetails.busno || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Starting Time</label>\n                                <input type=\"text\" value={busDetails.bustartingtime || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Route</label>\n                                <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Ground</label>\n                                <input type=\"text\" value={busDetails.busground || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Driver Name</label>\n                                <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Driver Phone Number</label>\n                                <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Live Tracking</label>\n                                <div className=\"live-tracking-placeholder\">\n                                    <p>Live tracking will be available soon...</p>\n                                </div>\n                            </div>\n                        </form>\n                    ) : (\n                        <p>{fetchError}</p>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    renderChangePassword = () => {\n        const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Change Password</h4>\n                    <form onSubmit={this.handlePasswordSubmit}>\n                        <div className=\"form-group-pro\">\n                            <label>Current Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"currentPassword\"\n                                value={currentPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group-pro\">\n                            <label>New Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                value={newPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group-pro\">\n                            <label>Confirm New Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmNewPassword\"\n                                value={confirmNewPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                        <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n                    </form>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { activeTab, studentDetails } = this.state;\n\n        return (\n            <div>\n                <Navbar />\n                <div className=\"profile-body-container\">\n                    <div className=\"profile-container-pro\">\n                        <div className=\"profile-left-side\">\n                            <div className=\"profile-card-pro\">\n                                <img\n                                    src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'}\n                                    alt=\"Profile Icon\"\n                                    className=\"profile-pic-pro\"\n                                />\n                                <h3>{this.state.loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n                                <p>Student</p>\n                                <div className=\"stats-pro\">\n                                    <p><strong>Roll No:</strong> {studentDetails ? studentDetails.rollno : 'N/A'}</p>\n                                    <p><strong>Bus No:</strong> {studentDetails ? studentDetails.busno : 'N/A'}</p>\n                                </div>\n                                <button className=\"view-profile-btn-pro\">Live Tracking</button>\n                            </div>\n                        </div>\n\n                        <div className=\"profile-right-side\">\n                            <div className=\"tabs-pro\">\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('student')}\n                                >\n                                    Student Details\n                                </button>\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('bus')}\n                                >\n                                    Bus Details\n                                </button>\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('password')}\n                                >\n                                    Change Password\n                                </button>\n                            </div>\n\n                            <div className=\"tab-content\">\n                                {activeTab === 'student' && this.renderStudentDetails()}\n                                {activeTab === 'bus' && this.renderBusDetails()}\n                                {activeTab === 'password' && this.renderChangePassword()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}