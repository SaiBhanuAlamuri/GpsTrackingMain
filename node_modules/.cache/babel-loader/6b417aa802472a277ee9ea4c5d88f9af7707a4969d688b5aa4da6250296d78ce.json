{"ast":null,"code":"// import React from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Brand from './section-components/brand-two';\n// import WhyChooseUs from './section-components/why-choose-us-v2';\n// import Service from './section-components/service';\n// import FunfactV2 from './section-components/funfact-v2';\n// import Video from './section-components/video';\n// import Cta from './section-components/cta-v2';\n// import Case from './section-components/case';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Pricing from './section-components/pricing';\n// import Contact from './section-components/contact';\n// import BrandV3 from './section-components/brand-v3';\n// import BlogPost from './section-components/blog-post';\n// import Footer from './global-components/footer-v2';\n// import Funfact from './section-components/funfact-v5';\n// const Home_V5 = () => {\n//     return <div>\n//         <Navbar />\n//         <Banner /><br></br><br></br><br></br><br></br><br></br><br></br>\n//         <Video />\n//         {/* <Brand /> */}\n//         {/* <WhyChooseUs /> */}\n//         <Service />\n//         {/* <FunfactV2 /> */}\n//         {/* <Video /> */}\n//         {/* <Cta /> */}\n//         {/* <Case /> */}\n//         {/* <Pricing />\n//         <Contact />\n//         <BrandV3 />\n//         <BlogPost /> */}\n//         <Funfact />\n//         <TestimonialV2 />\n//         <Footer />\n//     </div>\n// }\n// export default Home_V5;\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Video from './section-components/video';\n// import Service from './section-components/service';\n// import Funfact from './section-components/funfact-v5';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Footer from './global-components/footer-v2';\n// const Home_V5 = () => {\n//     const [popupVisible, setPopupVisible] = useState(false);\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n//     const [rollNumber, setRollNumber] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isScrolled, setIsScrolled] = useState(false); // Track if the user has scrolled\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         console.log('Login attempted with:', rollNumber, password);\n//         setIsLoggedIn(true);\n//         setPopupVisible(false);\n//         document.body.classList.remove('no-scroll');\n//     };\n//     const handleScroll = () => {\n//         if (window.scrollY > 0 && !isLoggedIn) {\n//             setIsScrolled(true); // Mark that user has scrolled\n//             setPopupVisible(true); // Show the login popup after scrolling\n//         }\n//     };\n//     useEffect(() => {\n//         window.addEventListener('scroll', handleScroll);\n//         return () => {\n//             window.removeEventListener('scroll', handleScroll);\n//         };\n//     }, [isLoggedIn]);\n//     useEffect(() => {\n//         if (popupVisible) {\n//             document.body.classList.add('no-scroll'); // Disable scrolling when popup is open\n//         } else {\n//             document.body.classList.remove('no-scroll'); // Enable scrolling\n//         }\n//     }, [popupVisible]);\n//     return (\n//         <div>\n//             {/* Pass isLoggedIn and trigger popup */}\n//             <Navbar isLoggedIn={isLoggedIn} triggerLogin={() => setPopupVisible(true)} />\n//             {/* First Page: Banner */}\n//             <div className={`first-page ${isScrolled && !isLoggedIn ? 'blurred' : ''}`}>\n//                 <Banner /><br></br><br></br><br></br><br></br><br></br><br></br>\n//                 {!isLoggedIn && !isScrolled && (\n//                     <div className=\"scroll-arrow\">\n//                         <span className=\"arrow-down\">&#x2193;</span>\n//                         <p>Scroll down or login to continue</p>\n//                     </div>\n//                 )}\n//             </div>\n//             {/* Other pages - blurred before login */}\n//             <div className={`content ${!isLoggedIn ? 'blurred' : ''}`}>\n//                 <Video />\n//                 <Service />\n//                 <Funfact />\n//                 <TestimonialV2 />\n//                 <Footer />\n//             </div>\n//             {/* Login Popup */}\n//             {popupVisible && !isLoggedIn && (\n//                 <div className=\"popup\">\n//                     <div className=\"popup-content\">\n//                         <h2>Login</h2>\n//                         <form onSubmit={handleLogin}>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"rollNumber\">Roll Number</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"rollNumber\"\n//                                     value={rollNumber}\n//                                     onChange={(e) => setRollNumber(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <button type=\"submit\" className=\"login-button\">LOGIN</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n// export default Home_V5;\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Video from './section-components/video';\n// import Service from './section-components/service';\n// import Funfact from './section-components/funfact-v5';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Footer from './global-components/footer-v2';\n// import axios from 'axios';\n// const Home_V5 = () => {\n//     const [popupVisible, setPopupVisible] = useState(false);\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n//     const [rollNumber, setRollNumber] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isScrolled, setIsScrolled] = useState(false); // Track if the user has scrolled\n//     const [errorMessage, setErrorMessage] = useState(''); // To store error messages\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n//         console.log('Login attempted with:', rollNumber, password);\n//         try {\n//             // Make a POST request to the backend login route\n//             const response = await axios.post('http://localhost:9001/login', {\n//                 rollno: rollNumber,\n//                 password: password,\n//             });\n//             if (response.status === 200) {\n//                 setIsLoggedIn(true);\n//                 setPopupVisible(false);\n//                 document.body.classList.remove('no-scroll');\n//                 setErrorMessage(''); // Clear any previous error messages\n//             }\n//         } catch (error) {\n//             if (error.response) {\n//                 // Request made and server responded\n//                 setErrorMessage(error.response.data.message);\n//             } else {\n//                 // Something happened in setting up the request that triggered an Error\n//                 setErrorMessage('Login failed. Please try again.');\n//             }\n//         }\n//     };\n//     const handleScroll = () => {\n//         if (window.scrollY > 0 && !isLoggedIn) {\n//             setIsScrolled(true); // Mark that user has scrolled\n//             setPopupVisible(true); // Show the login popup after scrolling\n//         }\n//     };\n//     useEffect(() => {\n//         window.addEventListener('scroll', handleScroll);\n//         return () => {\n//             window.removeEventListener('scroll', handleScroll);\n//         };\n//     }, [isLoggedIn]);\n//     useEffect(() => {\n//         if (popupVisible) {\n//             document.body.classList.add('no-scroll'); // Disable scrolling when popup is open\n//         } else {\n//             document.body.classList.remove('no-scroll'); // Enable scrolling\n//         }\n//     }, [popupVisible]);\n//     return (\n//         <div>\n//             {/* Pass isLoggedIn and trigger popup */}\n//             <Navbar isLoggedIn={isLoggedIn} triggerLogin={() => setPopupVisible(true)} />\n//             {/* First Page: Banner */}\n//             <div className={`first-page ${isScrolled && !isLoggedIn ? 'blurred' : ''}`}>\n//                 <Banner /><br /><br /><br /><br /><br /><br /><br />\n//                 {!isLoggedIn && !isScrolled && (\n//                     <div className=\"scroll-arrow\">\n//                         <span className=\"arrow-down\">&#x2193;</span>\n//                         <p>Scroll down or login to continue</p>\n//                     </div>\n//                 )}\n//             </div>\n//             {/* Other pages - blurred before login */}\n//             <div className={`content ${!isLoggedIn ? 'blurred' : ''}`}>\n//                 <Video />\n//                 <Service />\n//                 <Funfact />\n//                 <TestimonialV2 />\n//                 <Footer />\n//             </div>\n//             {/* Login Popup */}\n//             {popupVisible && !isLoggedIn && (\n//                 <div className=\"popup\">\n//                     <div className=\"popup-content\">\n//                         <h2>Login</h2>\n//                         <form onSubmit={handleLogin}>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"rollNumber\">Roll Number</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"rollNumber\"\n//                                     value={rollNumber}\n//                                     onChange={(e) => setRollNumber(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <button type=\"submit\" className=\"login-button\">LOGIN</button>\n//                         </form>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Display error message */}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n// export default Home_V5;\nimport React,{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import axios from'../axios';// Import Axios\nimport Navbar from'./global-components/navbar-v5';import Banner from'./section-components/banner-v5';import Video from'./section-components/video';import Service from'./section-components/service';import Funfact from'./section-components/funfact-v5';import TestimonialV2 from'./section-components/testimonial-v2';import Footer from'./global-components/footer-v2';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Home_V5=()=>{const[popupVisible,setPopupVisible]=useState(false);const[showForm,setShowForm]=useState(false);const[isLoggedIn,setIsLoggedIn]=useState(false);const[hasScrolled,setHasScrolled]=useState(false);const[rollNumber,setRollNumber]=useState('');const[password,setPassword]=useState('');const history=useHistory();// For navigation\nuseEffect(()=>{const loggedIn=localStorage.getItem('isLoggedIn')==='true';setIsLoggedIn(loggedIn);if(!loggedIn){document.body.style.overflow='hidden';}else{document.body.style.overflow='auto';}},[]);// Inside your Home_V5 component\nconst handleLogin=async e=>{e.preventDefault();console.log('Login attempted with:',rollNumber,password);try{// Send POST request to the login endpoint\n// const response = await axios.post('http://localhost:9001/login', {\n//     rollno: rollNumber,\n//     password: password,\n// });\nconst response=await axios.post('/login',{rollno:rollNumber,password:password});// If login is successful, update state and localStorage\nif(response.status===200){console.log(response.data.message);setIsLoggedIn(true);localStorage.setItem('isLoggedIn','true');localStorage.setItem('rollNumber',rollNumber);// Store roll number in local storage\n// Redirect to the profile page\n// history.push('/profile'); // Change this to your profile route\n// Hide login popup and allow scrolling\nsetPopupVisible(false);document.body.classList.remove('no-scroll');}}catch(error){console.error('Login failed:',error.response?error.response.data.message:error.message);alert('Login failed: '+(error.response?error.response.data.message:'An error occurred'));}};const handleScroll=()=>{if(!hasScrolled&&!isLoggedIn){setPopupVisible(true);setHasScrolled(true);}};useEffect(()=>{if(!isLoggedIn){window.addEventListener('scroll',handleScroll);}return()=>{window.removeEventListener('scroll',handleScroll);};},[isLoggedIn]);useEffect(()=>{if(popupVisible){document.body.style.overflow='hidden';}else{document.body.style.overflow='auto';}},[popupVisible]);// Handle logout logic\nconst handleLogout=()=>{setIsLoggedIn(false);localStorage.setItem('isLoggedIn','false');setPopupVisible(false);setShowForm(false);setRollNumber('');setPassword('');setHasScrolled(false);// Reset the scroll state\nhistory.push('/');// Navigate to home on logout\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{filter:popupVisible?'blur(8px)':'none',pointerEvents:popupVisible?'none':'auto',transition:'filter 0.3s ease'},children:[/*#__PURE__*/_jsx(Navbar,{isLoggedIn:isLoggedIn,onLogout:handleLogout}),/*#__PURE__*/_jsx(Banner,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Video,{}),/*#__PURE__*/_jsx(Service,{}),/*#__PURE__*/_jsx(Funfact,{}),/*#__PURE__*/_jsx(TestimonialV2,{}),/*#__PURE__*/_jsx(Footer,{})]}),popupVisible&&!isLoggedIn&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',display:'flex',justifyContent:'center',alignItems:'center',backgroundColor:'rgba(0, 0, 0, 0.5)',zIndex:1000},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#fff',padding:'20px',borderRadius:'10px',textAlign:'center',maxWidth:'400px',width:'100%',position:'relative'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"bus-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/assets/images/bus_moving.gif\"),alt:\"Moving Bus\",className:\"bus-icon\"})}),!showForm&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login Required\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You need to login to view the rest of the website.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowForm(true),style:{padding:'10px 20px',backgroundColor:'#ff7200',color:'white',border:'none',cursor:'pointer',width:'100%',marginTop:'10px'},children:\"LOGIN\"})]}),showForm&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rollNumber\",children:\"Roll Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"rollNumber\",value:rollNumber,onChange:e=>setRollNumber(e.target.value),required:true,style:{display:'block',width:'100%',padding:'8px',marginTop:'5px'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,style:{display:'block',width:'100%',padding:'8px',marginTop:'5px'}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{padding:'10px 20px',backgroundColor:'#ff7200',color:'white',border:'none',cursor:'pointer',width:'100%',marginTop:'10px'},children:\"LOGIN\"})]})]})})]});};export default Home_V5;","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","Navbar","Banner","Video","Service","Funfact","TestimonialV2","Footer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home_V5","popupVisible","setPopupVisible","showForm","setShowForm","isLoggedIn","setIsLoggedIn","hasScrolled","setHasScrolled","rollNumber","setRollNumber","password","setPassword","history","loggedIn","localStorage","getItem","document","body","style","overflow","handleLogin","e","preventDefault","console","log","response","post","rollno","status","data","message","setItem","classList","remove","error","alert","handleScroll","window","addEventListener","removeEventListener","handleLogout","push","children","filter","pointerEvents","transition","onLogout","position","top","left","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","padding","borderRadius","textAlign","maxWidth","className","src","concat","process","env","PUBLIC_URL","alt","onClick","color","border","cursor","marginTop","onSubmit","marginBottom","htmlFor","type","id","value","onChange","target","required"],"sources":["C:/Desktop/gpsproject_frontend-main/src/components/home-v5.js"],"sourcesContent":["// import React from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Brand from './section-components/brand-two';\n// import WhyChooseUs from './section-components/why-choose-us-v2';\n// import Service from './section-components/service';\n// import FunfactV2 from './section-components/funfact-v2';\n// import Video from './section-components/video';\n// import Cta from './section-components/cta-v2';\n// import Case from './section-components/case';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Pricing from './section-components/pricing';\n// import Contact from './section-components/contact';\n// import BrandV3 from './section-components/brand-v3';\n// import BlogPost from './section-components/blog-post';\n// import Footer from './global-components/footer-v2';\n// import Funfact from './section-components/funfact-v5';\n\n\n// const Home_V5 = () => {\n//     return <div>\n//         <Navbar />\n//         <Banner /><br></br><br></br><br></br><br></br><br></br><br></br>\n//         <Video />\n//         {/* <Brand /> */}\n//         {/* <WhyChooseUs /> */}\n//         <Service />\n//         {/* <FunfactV2 /> */}\n//         {/* <Video /> */}\n//         {/* <Cta /> */}\n//         {/* <Case /> */}\n//         {/* <Pricing />\n//         <Contact />\n//         <BrandV3 />\n//         <BlogPost /> */}\n//         <Funfact />\n//         <TestimonialV2 />\n//         <Footer />\n//     </div>\n// }\n\n// export default Home_V5;\n\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Video from './section-components/video';\n// import Service from './section-components/service';\n// import Funfact from './section-components/funfact-v5';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Footer from './global-components/footer-v2';\n\n\n// const Home_V5 = () => {\n//     const [popupVisible, setPopupVisible] = useState(false);\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n//     const [rollNumber, setRollNumber] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isScrolled, setIsScrolled] = useState(false); // Track if the user has scrolled\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         console.log('Login attempted with:', rollNumber, password);\n//         setIsLoggedIn(true);\n//         setPopupVisible(false);\n//         document.body.classList.remove('no-scroll');\n//     };\n\n//     const handleScroll = () => {\n//         if (window.scrollY > 0 && !isLoggedIn) {\n//             setIsScrolled(true); // Mark that user has scrolled\n//             setPopupVisible(true); // Show the login popup after scrolling\n//         }\n//     };\n\n//     useEffect(() => {\n//         window.addEventListener('scroll', handleScroll);\n\n//         return () => {\n//             window.removeEventListener('scroll', handleScroll);\n//         };\n//     }, [isLoggedIn]);\n\n//     useEffect(() => {\n//         if (popupVisible) {\n//             document.body.classList.add('no-scroll'); // Disable scrolling when popup is open\n//         } else {\n//             document.body.classList.remove('no-scroll'); // Enable scrolling\n//         }\n//     }, [popupVisible]);\n\n//     return (\n//         <div>\n//             {/* Pass isLoggedIn and trigger popup */}\n//             <Navbar isLoggedIn={isLoggedIn} triggerLogin={() => setPopupVisible(true)} />\n\n//             {/* First Page: Banner */}\n//             <div className={`first-page ${isScrolled && !isLoggedIn ? 'blurred' : ''}`}>\n//                 <Banner /><br></br><br></br><br></br><br></br><br></br><br></br>\n//                 {!isLoggedIn && !isScrolled && (\n//                     <div className=\"scroll-arrow\">\n//                         <span className=\"arrow-down\">&#x2193;</span>\n//                         <p>Scroll down or login to continue</p>\n//                     </div>\n//                 )}\n//             </div>\n\n//             {/* Other pages - blurred before login */}\n//             <div className={`content ${!isLoggedIn ? 'blurred' : ''}`}>\n//                 <Video />\n//                 <Service />\n//                 <Funfact />\n//                 <TestimonialV2 />\n//                 <Footer />\n//             </div>\n\n//             {/* Login Popup */}\n//             {popupVisible && !isLoggedIn && (\n//                 <div className=\"popup\">\n//                     <div className=\"popup-content\">\n//                         <h2>Login</h2>\n//                         <form onSubmit={handleLogin}>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"rollNumber\">Roll Number</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"rollNumber\"\n//                                     value={rollNumber}\n//                                     onChange={(e) => setRollNumber(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <button type=\"submit\" className=\"login-button\">LOGIN</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Home_V5;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './global-components/navbar-v5';\n// import Banner from './section-components/banner-v5';\n// import Video from './section-components/video';\n// import Service from './section-components/service';\n// import Funfact from './section-components/funfact-v5';\n// import TestimonialV2 from './section-components/testimonial-v2';\n// import Footer from './global-components/footer-v2';\n// import axios from 'axios';\n\n// const Home_V5 = () => {\n//     const [popupVisible, setPopupVisible] = useState(false);\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n//     const [rollNumber, setRollNumber] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isScrolled, setIsScrolled] = useState(false); // Track if the user has scrolled\n//     const [errorMessage, setErrorMessage] = useState(''); // To store error messages\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n//         console.log('Login attempted with:', rollNumber, password);\n\n//         try {\n//             // Make a POST request to the backend login route\n//             const response = await axios.post('http://localhost:9001/login', {\n//                 rollno: rollNumber,\n//                 password: password,\n//             });\n\n//             if (response.status === 200) {\n//                 setIsLoggedIn(true);\n//                 setPopupVisible(false);\n//                 document.body.classList.remove('no-scroll');\n//                 setErrorMessage(''); // Clear any previous error messages\n//             }\n//         } catch (error) {\n//             if (error.response) {\n//                 // Request made and server responded\n//                 setErrorMessage(error.response.data.message);\n//             } else {\n//                 // Something happened in setting up the request that triggered an Error\n//                 setErrorMessage('Login failed. Please try again.');\n//             }\n//         }\n//     };\n\n//     const handleScroll = () => {\n//         if (window.scrollY > 0 && !isLoggedIn) {\n//             setIsScrolled(true); // Mark that user has scrolled\n//             setPopupVisible(true); // Show the login popup after scrolling\n//         }\n//     };\n\n//     useEffect(() => {\n//         window.addEventListener('scroll', handleScroll);\n\n//         return () => {\n//             window.removeEventListener('scroll', handleScroll);\n//         };\n//     }, [isLoggedIn]);\n\n//     useEffect(() => {\n//         if (popupVisible) {\n//             document.body.classList.add('no-scroll'); // Disable scrolling when popup is open\n//         } else {\n//             document.body.classList.remove('no-scroll'); // Enable scrolling\n//         }\n//     }, [popupVisible]);\n\n//     return (\n//         <div>\n//             {/* Pass isLoggedIn and trigger popup */}\n//             <Navbar isLoggedIn={isLoggedIn} triggerLogin={() => setPopupVisible(true)} />\n\n//             {/* First Page: Banner */}\n//             <div className={`first-page ${isScrolled && !isLoggedIn ? 'blurred' : ''}`}>\n//                 <Banner /><br /><br /><br /><br /><br /><br /><br />\n//                 {!isLoggedIn && !isScrolled && (\n//                     <div className=\"scroll-arrow\">\n//                         <span className=\"arrow-down\">&#x2193;</span>\n//                         <p>Scroll down or login to continue</p>\n//                     </div>\n//                 )}\n//             </div>\n\n//             {/* Other pages - blurred before login */}\n//             <div className={`content ${!isLoggedIn ? 'blurred' : ''}`}>\n//                 <Video />\n//                 <Service />\n//                 <Funfact />\n//                 <TestimonialV2 />\n//                 <Footer />\n//             </div>\n\n//             {/* Login Popup */}\n//             {popupVisible && !isLoggedIn && (\n//                 <div className=\"popup\">\n//                     <div className=\"popup-content\">\n//                         <h2>Login</h2>\n//                         <form onSubmit={handleLogin}>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"rollNumber\">Roll Number</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"rollNumber\"\n//                                     value={rollNumber}\n//                                     onChange={(e) => setRollNumber(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <button type=\"submit\" className=\"login-button\">LOGIN</button>\n//                         </form>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Display error message */}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n// export default Home_V5;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from '../axios'; // Import Axios\nimport Navbar from './global-components/navbar-v5';\nimport Banner from './section-components/banner-v5';\nimport Video from './section-components/video';\nimport Service from './section-components/service';\nimport Funfact from './section-components/funfact-v5';\nimport TestimonialV2 from './section-components/testimonial-v2';\nimport Footer from './global-components/footer-v2';\n\n\nconst Home_V5 = () => {\n    const [popupVisible, setPopupVisible] = useState(false);\n    const [showForm, setShowForm] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [hasScrolled, setHasScrolled] = useState(false);\n    const [rollNumber, setRollNumber] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory(); // For navigation\n\n    useEffect(() => {\n        const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\n        setIsLoggedIn(loggedIn);\n\n        if (!loggedIn) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'auto';\n        }\n    }, []);\n\n    // Inside your Home_V5 component\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        console.log('Login attempted with:', rollNumber, password);\n\n        try {\n            // Send POST request to the login endpoint\n            // const response = await axios.post('http://localhost:9001/login', {\n            //     rollno: rollNumber,\n            //     password: password,\n            // });\n            const response = await axios.post('/login', {\n                rollno: rollNumber,\n                password: password,\n            });\n\n            // If login is successful, update state and localStorage\n            if (response.status === 200) {\n                console.log(response.data.message);\n                setIsLoggedIn(true);\n                localStorage.setItem('isLoggedIn', 'true');\n                localStorage.setItem('rollNumber', rollNumber); // Store roll number in local storage\n\n                // Redirect to the profile page\n                // history.push('/profile'); // Change this to your profile route\n\n                // Hide login popup and allow scrolling\n                setPopupVisible(false);\n                document.body.classList.remove('no-scroll');\n            }\n        } catch (error) {\n            console.error('Login failed:', error.response ? error.response.data.message : error.message);\n            alert('Login failed: ' + (error.response ? error.response.data.message : 'An error occurred'));\n        }\n    };\n\n\n\n    const handleScroll = () => {\n        if (!hasScrolled && !isLoggedIn) {\n            setPopupVisible(true);\n            setHasScrolled(true);\n        }\n    };\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            window.addEventListener('scroll', handleScroll);\n        }\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if (popupVisible) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'auto';\n        }\n    }, [popupVisible]);\n\n    // Handle logout logic\n    const handleLogout = () => {\n        setIsLoggedIn(false);\n        localStorage.setItem('isLoggedIn', 'false');\n        setPopupVisible(false);\n        setShowForm(false);\n        setRollNumber('');\n        setPassword('');\n        setHasScrolled(false); // Reset the scroll state\n        history.push('/'); // Navigate to home on logout\n    };\n\n    return (\n        <div>\n            <div\n                style={{\n                    filter: popupVisible ? 'blur(8px)' : 'none',\n                    pointerEvents: popupVisible ? 'none' : 'auto',\n                    transition: 'filter 0.3s ease',\n                }}\n            >\n                <Navbar isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n                <Banner /><br /><br /><br /><br /><br /><br /><br />\n                <Video />\n                <Service />\n                <Funfact />\n                <TestimonialV2 />\n                <Footer />\n            </div>\n\n            {popupVisible && !isLoggedIn && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100vw',\n                        height: '100vh',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                        zIndex: 1000,\n                    }}\n                >\n                    <div\n                        style={{\n                            backgroundColor: '#fff',\n                            padding: '20px',\n                            borderRadius: '10px',\n                            textAlign: 'center',\n                            maxWidth: '400px',\n                            width: '100%',\n                            position: 'relative'\n                        }}\n                    >\n\n\n                        <div className=\"bus-container\">\n                            <img\n                                src={`${process.env.PUBLIC_URL}/assets/images/bus_moving.gif`}\n                            alt=\"Moving Bus\"\n                            className=\"bus-icon\"\n                            />\n                        </div>\n                        {!showForm && (\n                            <>\n                                <h2>Login Required</h2>\n                                <p>You need to login to view the rest of the website.</p>\n                                <button\n                                    onClick={() => setShowForm(true)}\n                                    style={{\n                                        padding: '10px 20px',\n                                        backgroundColor: '#ff7200',\n                                        color: 'white',\n                                        border: 'none',\n                                        cursor: 'pointer',\n                                        width: '100%',\n                                        marginTop: '10px',\n                                    }}\n                                >\n                                    LOGIN\n                                </button>\n                            </>\n                        )}\n\n                        {showForm && (\n                            <form onSubmit={handleLogin}>\n                                <div style={{ marginBottom: '10px' }}>\n                                    <label htmlFor=\"rollNumber\">Roll Number</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"rollNumber\"\n                                        value={rollNumber}\n                                        onChange={(e) => setRollNumber(e.target.value)}\n                                        required\n                                        style={{\n                                            display: 'block',\n                                            width: '100%',\n                                            padding: '8px',\n                                            marginTop: '5px',\n                                        }}\n                                    />\n                                </div>\n                                <div style={{ marginBottom: '10px' }}>\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                        style={{\n                                            display: 'block',\n                                            width: '100%',\n                                            padding: '8px',\n                                            marginTop: '5px',\n                                        }}\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    style={{\n                                        padding: '10px 20px',\n                                        backgroundColor: '#ff7200',\n                                        color: 'white',\n                                        border: 'none',\n                                        cursor: 'pointer',\n                                        width: '100%',\n                                        marginTop: '10px',\n                                    }}\n                                >\n                                    LOGIN\n                                </button>\n                            </form>\n                        )}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Home_V5;\n\n\n\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}