{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\gpsproject_frontend-main\\\\src\\\\components\\\\startwork.js\";\n// import React, { useState, useEffect } from \"react\";\n// import \"./Alldummy.css\";\n// import { TbBus } from \"react-icons/tb\";\n// import BusDetails from \"./Businfo\";\n// import Roadmap from \"./Try\";\n// import { Track } from \"./GoogleMaps\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n// export const Startwork = () => {\n//     const BASE_URL = \"http://localhost:9001\";\n//     const location = useLocation();\n//     const { id } = location.state || {};\n//     const [busrelated, setBusrelated] = useState({});\n//     useEffect(() => {\n//         if (id) {\n//             getBusById(id);\n//         } else {\n//             console.warn(\"Bus ID is undefined.\");\n//         }\n//     }, [id]);\n//     const getBusById = async (id) => {\n//         try {\n//             const response = await axios.get(`${BASE_URL}/bus/${id}`);\n//             setBusrelated(response.data);\n//         } catch (error) {\n//             console.error(\"Error fetching bus by ID:\", error);\n//         }\n//     };\n//     const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n//     const Address = busrelated.address || {};\n//     const driverdetails = {\n//         name: busrelated.drivername || \"N/A\",\n//         phone: busrelated.driverphone || \"N/A\",\n//         cleaner: \"Yes\"\n//     };\n//     const trackdetails = {\n//         original: Address.OriginalAddress || \"Not specified\",\n//         destination: Address.DestinationAddress || \"Not specified\"\n//     };\n//     console.log(trackdetails);\n//     const [isTracking, setIsTracking] = useState(false);\n//     const handleLiveTracking = () => {\n//         setIsTracking(true);\n//     };\n//     const closeTracking = () => {\n//         setIsTracking(false);\n//     };\n//     return (\n//         <>\n//             <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n//                 <div className=\"bustag\">\n//                     <div className=\"iconrelated\">\n//                         <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n//                     </div>\n//                     <div className=\"busname\">\n//                         <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n//                     </div>\n//                 </div>\n//                 <div className=\"pingmybus\">\n//                     <button>Ping Bus</button>\n//                 </div>\n//                 <div className=\"busrelated\">\n//                     <div className=\"businnerrelated\">\n//                         <div className=\"busmain\">\n//                             <BusDetails driverInfo={driverdetails} />\n//                         </div>\n//                         <div className=\"busroute\">\n//                             <div className=\"busrouteinner\">\n//                                 <p className=\"route-heading\">Bus Route</p>\n//                                 <p className=\"route-description\">\n//                                     This bus follows a designated route to ensure efficient travel.\n//                                     Below is the detailed roadmap showing the key stops and landmarks.\n//                                 </p>\n//                                 <Roadmap steps={stopsparent} />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <div className=\"map\">\n//                     <div className=\"mapinner\">\n//                         <Track\n//                             onLiveTracking={handleLiveTracking}\n//                             origin={trackdetails.original}\n//                             destination={trackdetails.destination}\n//                         />\n//                     </div>\n//                 </div>\n//             </div>\n//             {isTracking && (\n//                 <div className=\"liveTrackingOverlay\">\n//                     <h2>Live Tracking</h2>\n//                     <button onClick={closeTracking} className=\"closeTrackingButton\">\n//                         Close\n//                     </button>\n//                 </div>\n//             )}\n//         </>\n//     );\n// };\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport { useLocation } from 'react-router-dom';\nimport { TbBus } from 'react-icons/tb';\nimport BusDetails from './busdetails';\nimport Roadmap from './roadmap';\nimport Track from './track';\n\nconst Startwork = () => {\n  // const BASE_URL = \"http://localhost:9001\";\n  // const BASE_URL = \"https://gpsproject-production.up.railway.app\";\n  const BASE_URL = \"https://bus-project-qs4q.onrender.com\";\n  const location = useLocation();\n  const {\n    id\n  } = location.state || {};\n  console.log(id);\n  const [busrelated, setBusrelated] = useState({});\n  useEffect(() => {\n    if (id) {\n      getBusById(id);\n    } else {\n      console.warn(\"Bus ID is undefined.\");\n    }\n  }, [id]);\n\n  const getBusById = async id => {\n    try {\n      const response = await axios.get(`/bus/${id}`);\n      setBusrelated(response.data);\n    } catch (error) {\n      console.error(\"Error fetching bus by ID:\", error);\n    }\n  };\n\n  const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n  const Address = busrelated.address || {};\n  const driverdetails = {\n    name: busrelated.drivername || \"N/A\",\n    phone: busrelated.driverphone || \"N/A\",\n    cleaner: \"Yes\"\n  };\n  const trackdetails = {\n    original: Address.OriginalAddress || \"Not specified\",\n    destination: Address.DestinationAddress || \"Not specified\"\n  };\n  const [isTracking, setIsTracking] = useState(false);\n\n  const handleLiveTracking = () => {\n    setIsTracking(true);\n  };\n\n  const closeTracking = () => {\n    setIsTracking(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `mainsection ${isTracking ? 'blurred' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bustag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iconrelated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TbBus, {\n    style: {\n      color: \"white\",\n      fontSize: \"38px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"busname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"Bus Number: \", busrelated.busno || \"Not specified\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pingmybus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Pin Bus\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"busrelated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"businnerrelated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"busmain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BusDetails, {\n    driverInfo: driverdetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"busroute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"busrouteinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"route-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, \"Bus Route\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"route-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, \"This bus follows a designated route to ensure efficient travel. Below is the detailed roadmap showing the key stops and landmarks.\"), /*#__PURE__*/React.createElement(Roadmap, {\n    steps: stopsparent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mapinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Track, {\n    onLiveTracking: handleLiveTracking,\n    origin: trackdetails.original,\n    destination: trackdetails.destination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  })))), isTracking && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"liveTrackingOverlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, \"Live Tracking\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeTracking,\n    className: \"closeTrackingButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"Close\")));\n};\n\nexport default Startwork;","map":{"version":3,"sources":["C:/Desktop/gpsproject_frontend-main/src/components/startwork.js"],"names":["React","useState","useEffect","axios","useLocation","TbBus","BusDetails","Roadmap","Track","Startwork","BASE_URL","location","id","state","console","log","busrelated","setBusrelated","getBusById","warn","response","get","data","error","stopsparent","Array","isArray","stops","Address","address","driverdetails","name","drivername","phone","driverphone","cleaner","trackdetails","original","OriginalAddress","destination","DestinationAddress","isTracking","setIsTracking","handleLiveTracking","closeTracking","color","fontSize","busno"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"./Alldummy.css\";\n// import { TbBus } from \"react-icons/tb\";\n// import BusDetails from \"./Businfo\";\n// import Roadmap from \"./Try\";\n// import { Track } from \"./GoogleMaps\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n\n// export const Startwork = () => {\n//     const BASE_URL = \"http://localhost:9001\";\n//     const location = useLocation();\n//     const { id } = location.state || {};\n\n//     const [busrelated, setBusrelated] = useState({});\n//     useEffect(() => {\n//         if (id) {\n//             getBusById(id);\n//         } else {\n//             console.warn(\"Bus ID is undefined.\");\n//         }\n//     }, [id]);\n\n//     const getBusById = async (id) => {\n//         try {\n//             const response = await axios.get(`${BASE_URL}/bus/${id}`);\n//             setBusrelated(response.data);\n//         } catch (error) {\n//             console.error(\"Error fetching bus by ID:\", error);\n//         }\n//     };\n\n//     const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n\n//     const Address = busrelated.address || {};\n//     const driverdetails = {\n//         name: busrelated.drivername || \"N/A\",\n//         phone: busrelated.driverphone || \"N/A\",\n//         cleaner: \"Yes\"\n//     };\n\n\n//     const trackdetails = {\n//         original: Address.OriginalAddress || \"Not specified\",\n//         destination: Address.DestinationAddress || \"Not specified\"\n//     };\n\n//     console.log(trackdetails);\n\n//     const [isTracking, setIsTracking] = useState(false);\n\n//     const handleLiveTracking = () => {\n//         setIsTracking(true);\n//     };\n\n//     const closeTracking = () => {\n//         setIsTracking(false);\n//     };\n\n//     return (\n//         <>\n//             <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n//                 <div className=\"bustag\">\n//                     <div className=\"iconrelated\">\n//                         <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n//                     </div>\n//                     <div className=\"busname\">\n//                         <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"pingmybus\">\n//                     <button>Ping Bus</button>\n//                 </div>\n\n//                 <div className=\"busrelated\">\n//                     <div className=\"businnerrelated\">\n//                         <div className=\"busmain\">\n//                             <BusDetails driverInfo={driverdetails} />\n//                         </div>\n\n//                         <div className=\"busroute\">\n//                             <div className=\"busrouteinner\">\n//                                 <p className=\"route-heading\">Bus Route</p>\n//                                 <p className=\"route-description\">\n//                                     This bus follows a designated route to ensure efficient travel.\n//                                     Below is the detailed roadmap showing the key stops and landmarks.\n//                                 </p>\n//                                 <Roadmap steps={stopsparent} />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"map\">\n//                     <div className=\"mapinner\">\n                    \n//                         <Track\n//                             onLiveTracking={handleLiveTracking}\n//                             origin={trackdetails.original}\n//                             destination={trackdetails.destination}\n//                         />\n\n//                     </div>\n//                 </div>\n//             </div>\n\n//             {isTracking && (\n//                 <div className=\"liveTrackingOverlay\">\n//                     <h2>Live Tracking</h2>\n//                     <button onClick={closeTracking} className=\"closeTrackingButton\">\n//                         Close\n//                     </button>\n//                 </div>\n//             )}\n//         </>\n//     );\n// };\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport { useLocation } from 'react-router-dom';\nimport { TbBus } from 'react-icons/tb';\nimport BusDetails from './busdetails';\nimport Roadmap from './roadmap';\nimport Track from './track';\n\nconst Startwork = () => {\n    // const BASE_URL = \"http://localhost:9001\";\n    // const BASE_URL = \"https://gpsproject-production.up.railway.app\";\n    const BASE_URL = \"https://bus-project-qs4q.onrender.com\";\n\n\n    const location = useLocation();\n    const { id } = location.state || {};\n\n    console.log(id);\n\n    const [busrelated, setBusrelated] = useState({});\n    useEffect(() => {\n        if (id) {\n            getBusById(id);\n        } else {\n            console.warn(\"Bus ID is undefined.\");\n        }\n    }, [id]);\n\n    const getBusById = async (id) => {\n        try {\n            const response = await axios.get(`/bus/${id}`);\n            setBusrelated(response.data);\n        } catch (error) {\n            console.error(\"Error fetching bus by ID:\", error);\n        }\n    };\n\n    const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n    const Address = busrelated.address || {};\n    const driverdetails = {\n        name: busrelated.drivername || \"N/A\",\n        phone: busrelated.driverphone || \"N/A\",\n        cleaner: \"Yes\"\n    };\n\n    const trackdetails = {\n        original: Address.OriginalAddress || \"Not specified\",\n        destination: Address.DestinationAddress || \"Not specified\"\n    };\n\n    const [isTracking, setIsTracking] = useState(false);\n\n    const handleLiveTracking = () => {\n        setIsTracking(true);\n    };\n\n    const closeTracking = () => {\n        setIsTracking(false);\n    };\n\n    return (\n        <>\n            <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n                <div className=\"bustag\">\n                    <div className=\"iconrelated\">\n                        <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n                    </div>\n                    <div className=\"busname\">\n                        <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n                    </div>\n                </div>\n\n                <div className=\"pingmybus\">\n                    <button>Pin Bus</button>\n                </div>\n\n                <div className=\"busrelated\">\n                    <div className=\"businnerrelated\">\n                        <div className=\"busmain\">\n                            <BusDetails driverInfo={driverdetails} />\n                        </div>\n\n                        <div className=\"busroute\">\n                            <div className=\"busrouteinner\">\n                                <p className=\"route-heading\">Bus Route</p>\n                                <p className=\"route-description\">\n                                    This bus follows a designated route to ensure efficient travel.\n                                    Below is the detailed roadmap showing the key stops and landmarks.\n                                </p>\n                                <Roadmap steps={stopsparent} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"map\">\n                    <div className=\"mapinner\">\n                        <Track\n                            onLiveTracking={handleLiveTracking}\n                            origin={trackdetails.original}\n                            destination={trackdetails.destination}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {isTracking && (\n                <div className=\"liveTrackingOverlay\">\n                    <h2>Live Tracking</h2>\n                    <button onClick={closeTracking} className=\"closeTrackingButton\">\n                        Close\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Startwork;\n"]},"metadata":{},"sourceType":"module"}