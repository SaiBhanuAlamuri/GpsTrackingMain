{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\gpsproject_frontend-main\\\\src\\\\components\\\\profile.js\";\n// import React, { Component } from 'react';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         // Basic password validation (you can extend it)\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         // Simulating password change (you can replace this with API call)\n//         console.log('Password successfully changed');\n//         this.setState({ \n//             currentPassword: '', \n//             newPassword: '', \n//             confirmNewPassword: '', \n//             errorMessage: '' \n//         });\n//     };\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-body-container\">\n//                 {/* Apply background to this div */}\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>DIVYA</h3>\n//                             <p>Student</p>\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> 123456</p>\n//                                 <p><strong>Bus No:</strong> 111</p>\n//                             </div>\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Student Name</label>\n//                                             <input type=\"text\" value=\"John Doe\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Roll Number</label>\n//                                             <input type=\"text\" value=\"123456\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Email</label>\n//                                             <input type=\"email\" value=\"john.doe@example.com\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Campus</label>\n//                                             <input type=\"text\" value=\"ABC Campus\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5'\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             // Simulating API call to change the password\n//             // Replace with actual API call\n//             await axios.post('http://localhost:9001/changePassword', { currentPassword, newPassword });\n//             console.log('Password successfully changed');\n//             this.setState({ \n//                 currentPassword: '', \n//                 newPassword: '', \n//                 confirmNewPassword: '', \n//                 errorMessage: '' \n//             });\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: 'Failed to change password' });\n//         }\n//     };\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage, studentDetails, loading, fetchError } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//             <div className=\"profile-body-container\">\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>{loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n//                             <p>Student</p>\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> {loading ? '...' : (studentDetails ? studentDetails.rollno : 'N/A')}</p>\n//                                 <p><strong>Bus No:</strong>  {loading ? '...' : (studentDetails ? studentDetails.busno : 'N/A')}</p>\n//                             </div>\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     {loading ? (\n//                                         <p>Loading...</p>\n//                                     ) : (\n//                                         <form>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Student Name</label>\n//                                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Roll Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Email</label>\n//                                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Campus</label>\n//                                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                                             </div>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Phone Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                                             </div>\n//                                         </form>\n//                                     )}\n//                                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderBusDetails = () => {\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     <form>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Number</label>\n//                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Starting Time</label>\n//                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Route</label>\n//                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Ground</label>\n//                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Name</label>\n//                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Phone Number</label>\n//                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Live Tracking</label>\n//                             <div className=\"live-tracking-placeholder\">\n//                                 <p>Live tracking will be available soon...</p>\n//                             </div>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     render() {\n//         const { activeTab } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n//     fetchBusDetails = async (busNumber) => {\n//         if (busNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n//                 this.setState({ busDetails: response.data });\n//             } catch (error) {\n//                 console.error('Error fetching bus details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch bus details' });\n//             }\n//         }\n//     };\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     // renderBusDetails = () => {\n//     //     return (\n//     //         <div className=\"profile-details-form\">\n//     //             <div className=\"profile-section-pro\">\n//     //                 <h4>Bus Details</h4>\n//     //                 <form>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Number</label>\n//     //                         <input type=\"text\" value=\"Bus 123\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Starting Time</label>\n//     //                         <input type=\"text\" value=\"7:30 AM\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Route</label>\n//     //                         <input type=\"text\" value=\"Route 1\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Ground</label>\n//     //                         <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Name</label>\n//     //                         <input type=\"text\" value=\"John Smith\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Phone Number</label>\n//     //                         <input type=\"text\" value=\"+1234567890\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Live Tracking</label>\n//     //                         <div className=\"live-tracking-placeholder\">\n//     //                             <p>Live tracking will be available soon...</p>\n//     //                         </div>\n//     //                     </div>\n//     //                 </form>\n//     //             </div>\n//     //         </div>\n//     //     );\n//     // };\n//     renderBusDetails = () => {\n//         const { busDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     {busDetails ? (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Number</label>\n//                                 <input type=\"text\" value={busDetails.busno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Starting Time</label>\n//                                 <input type=\"text\" value={busDetails.busstartingtime || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Route</label>\n//                                 <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Ground</label>\n//                                 <input type=\"text\" value={busDetails.busground || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Name</label>\n//                                 <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Phone Number</label>\n//                                 <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Live Tracking</label>\n//                                 <div className=\"live-tracking-placeholder\">\n//                                     <p>Live tracking will be available soon...</p>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     ) : (\n//                         <p>{fetchError}</p>\n//                     )}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n//     render() {\n//         const { activeTab } = this.state;\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Profile;\nimport React, { Component } from 'react';\nimport axios from '../axios';\nimport Navbar from './global-components/navbar-v5';\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'student',\n      // State to manage active tab\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      errorMessage: '',\n      studentDetails: null,\n      busDetails: null,\n      loading: true,\n      fetchError: ''\n    };\n\n    this.fetchStudentDetails = async () => {\n      const rollNumber = localStorage.getItem('rollNumber');\n\n      if (rollNumber) {\n        try {\n          // const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n          const response = await axios.get(`/getStudentDetails/${rollNumber}`);\n          this.setState({\n            studentDetails: response.data,\n            loading: false\n          });\n\n          if (response.data.busno) {\n            this.fetchBusDetails(response.data.busno);\n          }\n        } catch (error) {\n          console.error('Error fetching student details:', error);\n          this.setState({\n            fetchError: 'Failed to fetch student details',\n            loading: false\n          });\n        }\n      } else {\n        this.setState({\n          fetchError: 'Roll number not found in local storage',\n          loading: false\n        });\n      }\n    };\n\n    this.fetchBusDetails = async busNumber => {\n      try {\n        // const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n        const response = await axios.get(`/getBusDetails/${busNumber}`);\n        this.setState({\n          busDetails: response.data\n        });\n      } catch (error) {\n        console.error('Error fetching bus details:', error);\n        this.setState({\n          fetchError: 'Failed to fetch bus details'\n        });\n      }\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handlePasswordSubmit = async e => {\n      e.preventDefault();\n      const {\n        currentPassword,\n        newPassword,\n        confirmNewPassword\n      } = this.state;\n      const rollNumber = localStorage.getItem('rollNumber');\n\n      if (newPassword !== confirmNewPassword) {\n        this.setState({\n          errorMessage: 'New password and confirm password do not match!'\n        });\n        return;\n      }\n\n      try {\n        // const response = await axios.post('http://localhost:9001/changePassword', {\n        const response = await axios.post('/changePassword', {\n          rollno: rollNumber,\n          currentPassword,\n          newPassword\n        });\n        this.setState({\n          currentPassword: '',\n          newPassword: '',\n          confirmNewPassword: '',\n          errorMessage: ''\n        });\n        alert(response.data.message);\n      } catch (error) {\n        var _error$response, _error$response$data;\n\n        console.error('Error changing password:', error);\n        this.setState({\n          errorMessage: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to change password'\n        });\n      }\n    };\n\n    this.handleTabSwitch = tab => {\n      this.setState({\n        activeTab: tab\n      });\n    };\n\n    this.renderStudentDetails = () => {\n      const {\n        loading,\n        studentDetails,\n        fetchError\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-details-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-section-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 21\n        }\n      }, \"Student Details\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 25\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 33\n        }\n      }, \"Student Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: (studentDetails === null || studentDetails === void 0 ? void 0 : studentDetails.name) || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 33\n        }\n      }, \"Roll Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: (studentDetails === null || studentDetails === void 0 ? void 0 : studentDetails.rollno) || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 33\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        value: (studentDetails === null || studentDetails === void 0 ? void 0 : studentDetails.email) || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1220,\n          columnNumber: 33\n        }\n      }, \"Campus\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: (studentDetails === null || studentDetails === void 0 ? void 0 : studentDetails.campus) || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 33\n        }\n      }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: (studentDetails === null || studentDetails === void 0 ? void 0 : studentDetails.phoneno) || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 33\n        }\n      }))), fetchError && /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 36\n        }\n      }, fetchError)));\n    };\n\n    this.renderBusDetails = () => {\n      const {\n        busDetails,\n        fetchError\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-details-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-section-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 21\n        }\n      }, \"Bus Details\"), busDetails ? /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 33\n        }\n      }, \"Bus Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.busno || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 33\n        }\n      }, \"Bus Starting Time\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.bustartingtime || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 33\n        }\n      }, \"Bus Route\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.busroute || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 33\n        }\n      }, \"Bus Ground\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.busground || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 33\n        }\n      }, \"Driver Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.drivername || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 33\n        }\n      }, \"Driver Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: busDetails.driverphone || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 33\n        }\n      }, \"Live Tracking\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"live-tracking-placeholder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 37\n        }\n      }, \"Live tracking will be available soon...\")))) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 25\n        }\n      }, fetchError)));\n    };\n\n    this.renderChangePassword = () => {\n      const {\n        currentPassword,\n        newPassword,\n        confirmNewPassword,\n        errorMessage\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-details-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-section-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 21\n        }\n      }, \"Change Password\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handlePasswordSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 29\n        }\n      }, \"Current Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"currentPassword\",\n        value: currentPassword,\n        onChange: this.handleInputChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 29\n        }\n      }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"newPassword\",\n        value: newPassword,\n        onChange: this.handleInputChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group-pro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 29\n        }\n      }, \"Confirm New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmNewPassword\",\n        value: confirmNewPassword,\n        onChange: this.handleInputChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 29\n        }\n      })), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 42\n        }\n      }, errorMessage), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"submit-password-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 25\n        }\n      }, \"Change Password\"))));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudentDetails();\n  } // Fetch student details from the API\n\n\n  render() {\n    const {\n      activeTab,\n      studentDetails\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-body-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-container-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-card-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png',\n      alt: \"Profile Icon\",\n      className: \"profile-pic-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 33\n      }\n    }, this.state.loading ? 'Loading...' : studentDetails ? studentDetails.name : 'Student'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 33\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 40\n      }\n    }, \"Roll No:\"), \" \", studentDetails ? studentDetails.rollno : 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 40\n      }\n    }, \"Bus No:\"), \" \", studentDetails ? studentDetails.busno : 'N/A')), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"view-profile-btn-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 33\n      }\n    }, \"Live Tracking\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`,\n      onClick: () => this.handleTabSwitch('student'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 33\n      }\n    }, \"Student Details\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: `tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`,\n      onClick: () => this.handleTabSwitch('bus'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 33\n      }\n    }, \"Bus Details\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: `tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`,\n      onClick: () => this.handleTabSwitch('password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 33\n      }\n    }, \"Change Password\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 29\n      }\n    }, activeTab === 'student' && this.renderStudentDetails(), activeTab === 'bus' && this.renderBusDetails(), activeTab === 'password' && this.renderChangePassword())))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Desktop/gpsproject_frontend-main/src/components/profile.js"],"names":["React","Component","axios","Navbar","Profile","state","activeTab","currentPassword","newPassword","confirmNewPassword","errorMessage","studentDetails","busDetails","loading","fetchError","fetchStudentDetails","rollNumber","localStorage","getItem","response","get","setState","data","busno","fetchBusDetails","error","console","busNumber","handleInputChange","e","target","name","value","handlePasswordSubmit","preventDefault","post","rollno","alert","message","handleTabSwitch","tab","renderStudentDetails","email","campus","phoneno","color","renderBusDetails","bustartingtime","busroute","busground","drivername","driverphone","renderChangePassword","componentDidMount","render","process","env","PUBLIC_URL"],"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","sourcesContent":["// import React, { Component } from 'react';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n\n//         // Basic password validation (you can extend it)\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         // Simulating password change (you can replace this with API call)\n//         console.log('Password successfully changed');\n//         this.setState({ \n//             currentPassword: '', \n//             newPassword: '', \n//             confirmNewPassword: '', \n//             errorMessage: '' \n//         });\n//     };\n\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n\n//         return (\n//             <div className=\"profile-body-container\">\n//                 {/* Apply background to this div */}\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>DIVYA</h3>\n//                             <p>Student</p>\n\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> 123456</p>\n//                                 <p><strong>Bus No:</strong> 111</p>\n//                             </div>\n\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Student Name</label>\n//                                             <input type=\"text\" value=\"John Doe\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Roll Number</label>\n//                                             <input type=\"text\" value=\"123456\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Email</label>\n//                                             <input type=\"email\" value=\"john.doe@example.com\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Campus</label>\n//                                             <input type=\"text\" value=\"ABC Campus\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5'\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     // Handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             // Simulating API call to change the password\n//             // Replace with actual API call\n//             await axios.post('http://localhost:9001/changePassword', { currentPassword, newPassword });\n//             console.log('Password successfully changed');\n//             this.setState({ \n//                 currentPassword: '', \n//                 newPassword: '', \n//                 confirmNewPassword: '', \n//                 errorMessage: '' \n//             });\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: 'Failed to change password' });\n//         }\n//     };\n\n//     render() {\n//         const { activeTab, currentPassword, newPassword, confirmNewPassword, errorMessage, studentDetails, loading, fetchError } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n\n//             <div className=\"profile-body-container\">\n\n//                 <div className=\"profile-container-pro\">\n//                     {/* Left Profile Card */}\n//                     <div className=\"profile-left-side\">\n//                         <div className=\"profile-card-pro\">\n//                             <img \n//                                 src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                 alt=\"Profile Icon\" \n//                                 className=\"profile-pic-pro\" \n//                             />\n//                             <h3>{loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n//                             <p>Student</p>\n\n//                             <div className=\"stats-pro\">\n//                                 <p><strong>Roll No:</strong> {loading ? '...' : (studentDetails ? studentDetails.rollno : 'N/A')}</p>\n//                                 <p><strong>Bus No:</strong>  {loading ? '...' : (studentDetails ? studentDetails.busno : 'N/A')}</p>\n//                             </div>\n\n//                             <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                         </div>\n//                     </div>\n\n//                     {/* Right Section */}\n//                     <div className=\"profile-right-side\">\n//                         {/* Tabs for switching between details */}\n//                         <div className=\"tabs-pro\">\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('student')}\n//                             >\n//                                 Student Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('bus')}\n//                             >\n//                                 Bus Details\n//                             </button>\n//                             <button \n//                                 className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                 onClick={() => this.handleTabSwitch('password')}\n//                             >\n//                                 Change Password\n//                             </button>\n//                         </div>\n\n//                         {/* Conditional rendering based on active tab */}\n//                         {activeTab === 'student' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Student Details</h4>\n//                                     {loading ? (\n//                                         <p>Loading...</p>\n//                                     ) : (\n//                                         <form>\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Student Name</label>\n//                                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Roll Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Email</label>\n//                                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Campus</label>\n//                                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                                             </div>\n\n//                                             <div className=\"form-group-pro\">\n//                                                 <label>Phone Number</label>\n//                                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                                             </div>\n//                                         </form>\n//                                     )}\n//                                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'bus' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Bus Details</h4>\n//                                     <form>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Number</label>\n//                                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Starting Time</label>\n//                                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Route</label>\n//                                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Bus Ground</label>\n//                                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Name</label>\n//                                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Driver Phone Number</label>\n//                                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Live Tracking</label>\n//                                             <div className=\"live-tracking-placeholder\">\n//                                                 <p>Live tracking will be available soon...</p>\n//                                             </div>\n//                                         </div>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n\n//                         {activeTab === 'password' && (\n//                             <div className=\"profile-details-form\">\n//                                 <div className=\"profile-section-pro\">\n//                                     <h4>Change Password</h4>\n//                                     <form onSubmit={this.handlePasswordSubmit}>\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Current Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"currentPassword\" \n//                                                 value={currentPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"newPassword\" \n//                                                 value={newPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         <div className=\"form-group-pro\">\n//                                             <label>Confirm New Password</label>\n//                                             <input \n//                                                 type=\"password\" \n//                                                 name=\"confirmNewPassword\" \n//                                                 value={confirmNewPassword} \n//                                                 onChange={this.handleInputChange} \n//                                                 required \n//                                             />\n//                                         </div>\n\n//                                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//                                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                                     </form>\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     renderBusDetails = () => {\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     <form>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Number</label>\n//                             <input type=\"text\" value=\"Bus 123\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Starting Time</label>\n//                             <input type=\"text\" value=\"7:30 AM\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Route</label>\n//                             <input type=\"text\" value=\"Route 1\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Bus Ground</label>\n//                             <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Name</label>\n//                             <input type=\"text\" value=\"John Smith\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Driver Phone Number</label>\n//                             <input type=\"text\" value=\"+1234567890\" readOnly />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Live Tracking</label>\n//                             <div className=\"live-tracking-placeholder\">\n//                                 <p>Live tracking will be available soon...</p>\n//                             </div>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     render() {\n//         const { activeTab } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import Navbar from './global-components/navbar-v5';\n\n// class Profile extends Component {\n//     state = {\n//         activeTab: 'student', // State to manage which tab is active\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmNewPassword: '',\n//         errorMessage: '',\n//         studentDetails: null,\n//         loading: true,\n//         fetchError: '',\n//     };\n\n//     componentDidMount() {\n//         this.fetchStudentDetails();\n//     }\n\n//     // Function to fetch student details from the API\n//     fetchStudentDetails = async () => {\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n//         if (rollNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n//                 this.setState({ studentDetails: response.data, loading: false });\n//             } catch (error) {\n//                 console.error('Error fetching student details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n//             }\n//         } else {\n//             this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n//         }\n//     };\n\n//     fetchBusDetails = async (busNumber) => {\n//         if (busNumber) {\n//             try {\n//                 const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n//                 this.setState({ busDetails: response.data });\n//             } catch (error) {\n//                 console.error('Error fetching bus details:', error);\n//                 this.setState({ fetchError: 'Failed to fetch bus details' });\n//             }\n//         }\n//     };\n\n//     // Function to handle input changes in the password modal\n//     handleInputChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     };\n\n//     // Handle password change submission\n//     handlePasswordSubmit = async (e) => {\n//         e.preventDefault();\n//         const { currentPassword, newPassword, confirmNewPassword } = this.state;\n//         const rollNumber = localStorage.getItem('rollNumber'); // Retrieve roll number from local storage\n\n//         // Basic password validation\n//         if (newPassword !== confirmNewPassword) {\n//             this.setState({ errorMessage: 'New password and confirm password do not match!' });\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:9001/changePassword', {\n//                 rollno: rollNumber, // Send roll number with the request\n//                 currentPassword,\n//                 newPassword,\n//             });\n//             this.setState({\n//                 currentPassword: '',\n//                 newPassword: '',\n//                 confirmNewPassword: '',\n//                 errorMessage: '',\n//             });\n//             alert(response.data.message); // Use the response message\n//         } catch (error) {\n//             console.error('Error changing password:', error);\n//             this.setState({ errorMessage: error.response.data.message || 'Failed to change password' });\n//         }\n//     };\n\n//     // Function to handle tab switching\n//     handleTabSwitch = (tab) => {\n//         this.setState({ activeTab: tab });\n//     };\n\n//     renderStudentDetails = () => {\n//         const { loading, studentDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Student Details</h4>\n//                     {loading ? (\n//                         <p>Loading...</p>\n//                     ) : (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Student Name</label>\n//                                 <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Roll Number</label>\n//                                 <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Email</label>\n//                                 <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Campus</label>\n//                                 <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Phone Number</label>\n//                                 <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n//                             </div>\n//                         </form>\n//                     )}\n//                     {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     // renderBusDetails = () => {\n//     //     return (\n//     //         <div className=\"profile-details-form\">\n//     //             <div className=\"profile-section-pro\">\n//     //                 <h4>Bus Details</h4>\n//     //                 <form>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Number</label>\n//     //                         <input type=\"text\" value=\"Bus 123\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Starting Time</label>\n//     //                         <input type=\"text\" value=\"7:30 AM\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Route</label>\n//     //                         <input type=\"text\" value=\"Route 1\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Bus Ground</label>\n//     //                         <input type=\"text\" value=\"Central Bus Ground\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Name</label>\n//     //                         <input type=\"text\" value=\"John Smith\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Driver Phone Number</label>\n//     //                         <input type=\"text\" value=\"+1234567890\" readOnly />\n//     //                     </div>\n//     //                     <div className=\"form-group-pro\">\n//     //                         <label>Live Tracking</label>\n//     //                         <div className=\"live-tracking-placeholder\">\n//     //                             <p>Live tracking will be available soon...</p>\n//     //                         </div>\n//     //                     </div>\n//     //                 </form>\n//     //             </div>\n//     //         </div>\n//     //     );\n//     // };\n//     renderBusDetails = () => {\n//         const { busDetails, fetchError } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Bus Details</h4>\n//                     {busDetails ? (\n//                         <form>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Number</label>\n//                                 <input type=\"text\" value={busDetails.busno || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Starting Time</label>\n//                                 <input type=\"text\" value={busDetails.busstartingtime || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Route</label>\n//                                 <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Bus Ground</label>\n//                                 <input type=\"text\" value={busDetails.busground || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Name</label>\n//                                 <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Driver Phone Number</label>\n//                                 <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n//                             </div>\n//                             <div className=\"form-group-pro\">\n//                                 <label>Live Tracking</label>\n//                                 <div className=\"live-tracking-placeholder\">\n//                                     <p>Live tracking will be available soon...</p>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     ) : (\n//                         <p>{fetchError}</p>\n//                     )}\n//                 </div>\n//             </div>\n//         );\n//     };\n\n\n//     renderChangePassword = () => {\n//         const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n//         return (\n//             <div className=\"profile-details-form\">\n//                 <div className=\"profile-section-pro\">\n//                     <h4>Change Password</h4>\n//                     <form onSubmit={this.handlePasswordSubmit}>\n//                         <div className=\"form-group-pro\">\n//                             <label>Current Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"currentPassword\" \n//                                 value={currentPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"newPassword\" \n//                                 value={newPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         <div className=\"form-group-pro\">\n//                             <label>Confirm New Password</label>\n//                             <input \n//                                 type=\"password\" \n//                                 name=\"confirmNewPassword\" \n//                                 value={confirmNewPassword} \n//                                 onChange={this.handleInputChange} \n//                                 required \n//                             />\n//                         </div>\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         );\n//     };\n\n//     render() {\n//         const { activeTab } = this.state;\n\n//         return (\n//             <div>\n//                 <Navbar/>\n//                 <div className=\"profile-body-container\">\n//                     <div className=\"profile-container-pro\">\n//                         {/* Left Profile Card */}\n//                         <div className=\"profile-left-side\">\n//                             <div className=\"profile-card-pro\">\n//                                 <img \n//                                     src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'} \n//                                     alt=\"Profile Icon\" \n//                                     className=\"profile-pic-pro\" \n//                                 />\n//                                 <h3>{this.state.loading ? 'Loading...' : (this.state.studentDetails ? this.state.studentDetails.name : 'Student')}</h3>\n//                                 <p>Student</p>\n//                                 <div className=\"stats-pro\">\n//                                     <p><strong>Roll No:</strong> {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.rollno : 'N/A')}</p>\n//                                     <p><strong>Bus No:</strong>  {this.state.loading ? '...' : (this.state.studentDetails ? this.state.studentDetails.busno : 'N/A')}</p>\n//                                 </div>\n//                                 <button className=\"view-profile-btn-pro\">Live Tracking</button>\n//                             </div>\n//                         </div>\n\n//                         {/* Right Section */}\n//                         <div className=\"profile-right-side\">\n//                             {/* Tabs for switching between details */}\n//                             <div className=\"tabs-pro\">\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('student')}\n//                                 >\n//                                     Student Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('bus')}\n//                                 >\n//                                     Bus Details\n//                                 </button>\n//                                 <button \n//                                     className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`} \n//                                     onClick={() => this.handleTabSwitch('password')}\n//                                 >\n//                                     Change Password\n//                                 </button>\n//                             </div>\n\n//                             {/* Conditional rendering based on active tab */}\n//                             {activeTab === 'student' && this.renderStudentDetails()}\n//                             {activeTab === 'bus' && this.renderBusDetails()}\n//                             {activeTab === 'password' && this.renderChangePassword()}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Profile;\n\n\n\nimport React, { Component } from 'react';\nimport axios from '../axios';\nimport Navbar from './global-components/navbar-v5';\n\nclass Profile extends Component {\n    state = {\n        activeTab: 'student', // State to manage active tab\n        currentPassword: '',\n        newPassword: '',\n        confirmNewPassword: '',\n        errorMessage: '',\n        studentDetails: null,\n        busDetails: null,\n        loading: true,\n        fetchError: '',\n    };\n\n    componentDidMount() {\n        this.fetchStudentDetails();\n    }\n\n    // Fetch student details from the API\n    fetchStudentDetails = async () => {\n        const rollNumber = localStorage.getItem('rollNumber');\n        if (rollNumber) {\n            try {\n                // const response = await axios.get(`http://localhost:9001/getStudentDetails/${rollNumber}`);\n                const response = await axios.get(`/getStudentDetails/${rollNumber}`);\n                this.setState({ studentDetails: response.data, loading: false });\n                if (response.data.busno) {\n                    this.fetchBusDetails(response.data.busno);\n                }\n            } catch (error) {\n                console.error('Error fetching student details:', error);\n                this.setState({ fetchError: 'Failed to fetch student details', loading: false });\n            }\n        } else {\n            this.setState({ fetchError: 'Roll number not found in local storage', loading: false });\n        }\n    };\n\n    // Fetch bus details based on the bus number\n    fetchBusDetails = async (busNumber) => {\n        try {\n            // const response = await axios.get(`http://localhost:9001/getBusDetails/${busNumber}`);\n            const response = await axios.get(`/getBusDetails/${busNumber}`);\n            this.setState({ busDetails: response.data });\n        } catch (error) {\n            console.error('Error fetching bus details:', error);\n            this.setState({ fetchError: 'Failed to fetch bus details' });\n        }\n    };\n\n    // Handle input changes for password fields\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    // Handle password change submission\n    handlePasswordSubmit = async (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmNewPassword } = this.state;\n        const rollNumber = localStorage.getItem('rollNumber');\n\n        if (newPassword !== confirmNewPassword) {\n            this.setState({ errorMessage: 'New password and confirm password do not match!' });\n            return;\n        }\n\n        try {\n            // const response = await axios.post('http://localhost:9001/changePassword', {\n            const response = await axios.post('/changePassword', {\n                rollno: rollNumber,\n                currentPassword,\n                newPassword,\n            });\n            this.setState({\n                currentPassword: '',\n                newPassword: '',\n                confirmNewPassword: '',\n                errorMessage: '',\n            });\n            alert(response.data.message);\n        } catch (error) {\n            console.error('Error changing password:', error);\n            this.setState({ errorMessage: error.response?.data?.message || 'Failed to change password' });\n        }\n    };\n\n    // Handle tab switching\n    handleTabSwitch = (tab) => {\n        this.setState({ activeTab: tab });\n    };\n\n    renderStudentDetails = () => {\n        const { loading, studentDetails, fetchError } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Student Details</h4>\n                    {loading ? (\n                        <p>Loading...</p>\n                    ) : (\n                        <form>\n                            <div className=\"form-group-pro\">\n                                <label>Student Name</label>\n                                <input type=\"text\" value={studentDetails?.name || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Roll Number</label>\n                                <input type=\"text\" value={studentDetails?.rollno || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Email</label>\n                                <input type=\"email\" value={studentDetails?.email || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Campus</label>\n                                <input type=\"text\" value={studentDetails?.campus || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Phone Number</label>\n                                <input type=\"text\" value={studentDetails?.phoneno || ''} readOnly />\n                            </div>\n                        </form>\n                    )}\n                    {fetchError && <p style={{ color: 'red' }}>{fetchError}</p>}\n                </div>\n            </div>\n        );\n    };\n\n    renderBusDetails = () => {\n        const { busDetails, fetchError } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Bus Details</h4>\n                    {busDetails ? (\n                        <form>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Number</label>\n                                <input type=\"text\" value={busDetails.busno || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Starting Time</label>\n                                <input type=\"text\" value={busDetails.bustartingtime || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Route</label>\n                                <input type=\"text\" value={busDetails.busroute || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Bus Ground</label>\n                                <input type=\"text\" value={busDetails.busground || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Driver Name</label>\n                                <input type=\"text\" value={busDetails.drivername || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Driver Phone Number</label>\n                                <input type=\"text\" value={busDetails.driverphone || ''} readOnly />\n                            </div>\n                            <div className=\"form-group-pro\">\n                                <label>Live Tracking</label>\n                                <div className=\"live-tracking-placeholder\">\n                                    <p>Live tracking will be available soon...</p>\n                                </div>\n                            </div>\n                        </form>\n                    ) : (\n                        <p>{fetchError}</p>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    renderChangePassword = () => {\n        const { currentPassword, newPassword, confirmNewPassword, errorMessage } = this.state;\n        return (\n            <div className=\"profile-details-form\">\n                <div className=\"profile-section-pro\">\n                    <h4>Change Password</h4>\n                    <form onSubmit={this.handlePasswordSubmit}>\n                        <div className=\"form-group-pro\">\n                            <label>Current Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"currentPassword\"\n                                value={currentPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group-pro\">\n                            <label>New Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                value={newPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group-pro\">\n                            <label>Confirm New Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmNewPassword\"\n                                value={confirmNewPassword}\n                                onChange={this.handleInputChange}\n                                required\n                            />\n                        </div>\n                        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                        <button type=\"submit\" className=\"submit-password-btn\">Change Password</button>\n                    </form>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { activeTab, studentDetails } = this.state;\n\n        return (\n            <div>\n                <Navbar />\n                <div className=\"profile-body-container\">\n                    <div className=\"profile-container-pro\">\n                        <div className=\"profile-left-side\">\n                            <div className=\"profile-card-pro\">\n                                <img\n                                    src={process.env.PUBLIC_URL + '/assets/images/testimonials/testimonial-2-2.png'}\n                                    alt=\"Profile Icon\"\n                                    className=\"profile-pic-pro\"\n                                />\n                                <h3>{this.state.loading ? 'Loading...' : (studentDetails ? studentDetails.name : 'Student')}</h3>\n                                <p>Student</p>\n                                <div className=\"stats-pro\">\n                                    <p><strong>Roll No:</strong> {studentDetails ? studentDetails.rollno : 'N/A'}</p>\n                                    <p><strong>Bus No:</strong> {studentDetails ? studentDetails.busno : 'N/A'}</p>\n                                </div>\n                                <button className=\"view-profile-btn-pro\">Live Tracking</button>\n                            </div>\n                        </div>\n\n                        <div className=\"profile-right-side\">\n                            <div className=\"tabs-pro\">\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'student' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('student')}\n                                >\n                                    Student Details\n                                </button>\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'bus' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('bus')}\n                                >\n                                    Bus Details\n                                </button>\n                                <button\n                                    className={`tab-btn-pro ${activeTab === 'password' ? 'active' : ''}`}\n                                    onClick={() => this.handleTabSwitch('password')}\n                                >\n                                    Change Password\n                                </button>\n                            </div>\n\n                            <div className=\"tab-content\">\n                                {activeTab === 'student' && this.renderStudentDetails()}\n                                {activeTab === 'bus' && this.renderBusDetails()}\n                                {activeTab === 'password' && this.renderChangePassword()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}