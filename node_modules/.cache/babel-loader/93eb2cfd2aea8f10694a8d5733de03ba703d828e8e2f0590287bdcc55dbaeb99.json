{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import \"./Alldummy.css\";\n// import { TbBus } from \"react-icons/tb\";\n// import BusDetails from \"./Businfo\";\n// import Roadmap from \"./Try\";\n// import { Track } from \"./GoogleMaps\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n// export const Startwork = () => {\n//     const BASE_URL = \"http://localhost:9001\";\n//     const location = useLocation();\n//     const { id } = location.state || {};\n//     const [busrelated, setBusrelated] = useState({});\n//     useEffect(() => {\n//         if (id) {\n//             getBusById(id);\n//         } else {\n//             console.warn(\"Bus ID is undefined.\");\n//         }\n//     }, [id]);\n//     const getBusById = async (id) => {\n//         try {\n//             const response = await axios.get(`${BASE_URL}/bus/${id}`);\n//             setBusrelated(response.data);\n//         } catch (error) {\n//             console.error(\"Error fetching bus by ID:\", error);\n//         }\n//     };\n//     const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n//     const Address = busrelated.address || {};\n//     const driverdetails = {\n//         name: busrelated.drivername || \"N/A\",\n//         phone: busrelated.driverphone || \"N/A\",\n//         cleaner: \"Yes\"\n//     };\n//     const trackdetails = {\n//         original: Address.OriginalAddress || \"Not specified\",\n//         destination: Address.DestinationAddress || \"Not specified\"\n//     };\n//     console.log(trackdetails);\n//     const [isTracking, setIsTracking] = useState(false);\n//     const handleLiveTracking = () => {\n//         setIsTracking(true);\n//     };\n//     const closeTracking = () => {\n//         setIsTracking(false);\n//     };\n//     return (\n//         <>\n//             <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n//                 <div className=\"bustag\">\n//                     <div className=\"iconrelated\">\n//                         <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n//                     </div>\n//                     <div className=\"busname\">\n//                         <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n//                     </div>\n//                 </div>\n//                 <div className=\"pingmybus\">\n//                     <button>Ping Bus</button>\n//                 </div>\n//                 <div className=\"busrelated\">\n//                     <div className=\"businnerrelated\">\n//                         <div className=\"busmain\">\n//                             <BusDetails driverInfo={driverdetails} />\n//                         </div>\n//                         <div className=\"busroute\">\n//                             <div className=\"busrouteinner\">\n//                                 <p className=\"route-heading\">Bus Route</p>\n//                                 <p className=\"route-description\">\n//                                     This bus follows a designated route to ensure efficient travel.\n//                                     Below is the detailed roadmap showing the key stops and landmarks.\n//                                 </p>\n//                                 <Roadmap steps={stopsparent} />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <div className=\"map\">\n//                     <div className=\"mapinner\">\n//                         <Track\n//                             onLiveTracking={handleLiveTracking}\n//                             origin={trackdetails.original}\n//                             destination={trackdetails.destination}\n//                         />\n//                     </div>\n//                 </div>\n//             </div>\n//             {isTracking && (\n//                 <div className=\"liveTrackingOverlay\">\n//                     <h2>Live Tracking</h2>\n//                     <button onClick={closeTracking} className=\"closeTrackingButton\">\n//                         Close\n//                     </button>\n//                 </div>\n//             )}\n//         </>\n//     );\n// };\nimport React,{useState,useEffect}from'react';import axios from'../axios';import{useLocation}from'react-router-dom';import{TbBus}from'react-icons/tb';import BusDetails from'./busdetails';import Roadmap from'./roadmap';import Track from'./track';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Startwork=()=>{// const BASE_URL = \"http://localhost:9001\";\n// const BASE_URL = \"https://gpsproject-production.up.railway.app\";\nconst BASE_URL=\"https://bus-project-qs4q.onrender.com\";const location=useLocation();const{id}=location.state||{};console.log(id);const[busrelated,setBusrelated]=useState({});useEffect(()=>{if(id){getBusById(id);}else{console.warn(\"Bus ID is undefined.\");}},[id]);const getBusById=async id=>{try{const response=await axios.get(\"/bus/\".concat(id));setBusrelated(response.data);}catch(error){console.error(\"Error fetching bus by ID:\",error);}};const stopsparent=Array.isArray(busrelated.stops)?busrelated.stops:[];const Address=busrelated.address||{};const driverdetails={name:busrelated.drivername||\"N/A\",phone:busrelated.driverphone||\"N/A\",cleaner:\"Yes\"};const trackdetails={original:Address.OriginalAddress||\"Not specified\",destination:Address.DestinationAddress||\"Not specified\"};const[isTracking,setIsTracking]=useState(false);const handleLiveTracking=()=>{setIsTracking(true);};const closeTracking=()=>{setIsTracking(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mainsection \".concat(isTracking?'blurred':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bustag\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"iconrelated\",children:/*#__PURE__*/_jsx(TbBus,{style:{color:\"white\",fontSize:\"38px\"}})}),/*#__PURE__*/_jsx(\"div\",{className:\"busname\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Bus Number: \",busrelated.busno||\"Not specified\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pingmybus\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Pin Bus\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"busrelated\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"businnerrelated\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"busmain\",children:/*#__PURE__*/_jsx(BusDetails,{driverInfo:driverdetails})}),/*#__PURE__*/_jsx(\"div\",{className:\"busroute\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"busrouteinner\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"route-heading\",children:\"Bus Route\"}),/*#__PURE__*/_jsx(\"p\",{className:\"route-description\",children:\"This bus follows a designated route to ensure efficient travel. Below is the detailed roadmap showing the key stops and landmarks.\"}),/*#__PURE__*/_jsx(Roadmap,{steps:stopsparent})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"map\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mapinner\",children:/*#__PURE__*/_jsx(Track,{onLiveTracking:handleLiveTracking,origin:trackdetails.original,destination:trackdetails.destination})})})]}),isTracking&&/*#__PURE__*/_jsxs(\"div\",{className:\"liveTrackingOverlay\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Live Tracking\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeTracking,className:\"closeTrackingButton\",children:\"Close\"})]})]});};export default Startwork;","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","TbBus","BusDetails","Roadmap","Track","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Startwork","BASE_URL","location","id","state","console","log","busrelated","setBusrelated","getBusById","warn","response","get","concat","data","error","stopsparent","Array","isArray","stops","Address","address","driverdetails","name","drivername","phone","driverphone","cleaner","trackdetails","original","OriginalAddress","destination","DestinationAddress","isTracking","setIsTracking","handleLiveTracking","closeTracking","children","className","style","color","fontSize","busno","driverInfo","steps","onLiveTracking","origin","onClick"],"sources":["C:/Desktop/gpsproject_frontend-main/src/components/startwork.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"./Alldummy.css\";\n// import { TbBus } from \"react-icons/tb\";\n// import BusDetails from \"./Businfo\";\n// import Roadmap from \"./Try\";\n// import { Track } from \"./GoogleMaps\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n\n// export const Startwork = () => {\n//     const BASE_URL = \"http://localhost:9001\";\n//     const location = useLocation();\n//     const { id } = location.state || {};\n\n//     const [busrelated, setBusrelated] = useState({});\n//     useEffect(() => {\n//         if (id) {\n//             getBusById(id);\n//         } else {\n//             console.warn(\"Bus ID is undefined.\");\n//         }\n//     }, [id]);\n\n//     const getBusById = async (id) => {\n//         try {\n//             const response = await axios.get(`${BASE_URL}/bus/${id}`);\n//             setBusrelated(response.data);\n//         } catch (error) {\n//             console.error(\"Error fetching bus by ID:\", error);\n//         }\n//     };\n\n//     const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n\n//     const Address = busrelated.address || {};\n//     const driverdetails = {\n//         name: busrelated.drivername || \"N/A\",\n//         phone: busrelated.driverphone || \"N/A\",\n//         cleaner: \"Yes\"\n//     };\n\n\n//     const trackdetails = {\n//         original: Address.OriginalAddress || \"Not specified\",\n//         destination: Address.DestinationAddress || \"Not specified\"\n//     };\n\n//     console.log(trackdetails);\n\n//     const [isTracking, setIsTracking] = useState(false);\n\n//     const handleLiveTracking = () => {\n//         setIsTracking(true);\n//     };\n\n//     const closeTracking = () => {\n//         setIsTracking(false);\n//     };\n\n//     return (\n//         <>\n//             <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n//                 <div className=\"bustag\">\n//                     <div className=\"iconrelated\">\n//                         <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n//                     </div>\n//                     <div className=\"busname\">\n//                         <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"pingmybus\">\n//                     <button>Ping Bus</button>\n//                 </div>\n\n//                 <div className=\"busrelated\">\n//                     <div className=\"businnerrelated\">\n//                         <div className=\"busmain\">\n//                             <BusDetails driverInfo={driverdetails} />\n//                         </div>\n\n//                         <div className=\"busroute\">\n//                             <div className=\"busrouteinner\">\n//                                 <p className=\"route-heading\">Bus Route</p>\n//                                 <p className=\"route-description\">\n//                                     This bus follows a designated route to ensure efficient travel.\n//                                     Below is the detailed roadmap showing the key stops and landmarks.\n//                                 </p>\n//                                 <Roadmap steps={stopsparent} />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"map\">\n//                     <div className=\"mapinner\">\n                    \n//                         <Track\n//                             onLiveTracking={handleLiveTracking}\n//                             origin={trackdetails.original}\n//                             destination={trackdetails.destination}\n//                         />\n\n//                     </div>\n//                 </div>\n//             </div>\n\n//             {isTracking && (\n//                 <div className=\"liveTrackingOverlay\">\n//                     <h2>Live Tracking</h2>\n//                     <button onClick={closeTracking} className=\"closeTrackingButton\">\n//                         Close\n//                     </button>\n//                 </div>\n//             )}\n//         </>\n//     );\n// };\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport { useLocation } from 'react-router-dom';\nimport { TbBus } from 'react-icons/tb';\nimport BusDetails from './busdetails';\nimport Roadmap from './roadmap';\nimport Track from './track';\n\nconst Startwork = () => {\n    // const BASE_URL = \"http://localhost:9001\";\n    // const BASE_URL = \"https://gpsproject-production.up.railway.app\";\n    const BASE_URL = \"https://bus-project-qs4q.onrender.com\";\n\n\n    const location = useLocation();\n    const { id } = location.state || {};\n\n    console.log(id);\n\n    const [busrelated, setBusrelated] = useState({});\n    useEffect(() => {\n        if (id) {\n            getBusById(id);\n        } else {\n            console.warn(\"Bus ID is undefined.\");\n        }\n    }, [id]);\n\n    const getBusById = async (id) => {\n        try {\n            const response = await axios.get(`/bus/${id}`);\n            setBusrelated(response.data);\n        } catch (error) {\n            console.error(\"Error fetching bus by ID:\", error);\n        }\n    };\n\n    const stopsparent = Array.isArray(busrelated.stops) ? busrelated.stops : [];\n    const Address = busrelated.address || {};\n    const driverdetails = {\n        name: busrelated.drivername || \"N/A\",\n        phone: busrelated.driverphone || \"N/A\",\n        cleaner: \"Yes\"\n    };\n\n    const trackdetails = {\n        original: Address.OriginalAddress || \"Not specified\",\n        destination: Address.DestinationAddress || \"Not specified\"\n    };\n\n    const [isTracking, setIsTracking] = useState(false);\n\n    const handleLiveTracking = () => {\n        setIsTracking(true);\n    };\n\n    const closeTracking = () => {\n        setIsTracking(false);\n    };\n\n    return (\n        <>\n            <div className={`mainsection ${isTracking ? 'blurred' : ''}`}>\n                <div className=\"bustag\">\n                    <div className=\"iconrelated\">\n                        <TbBus style={{ color: \"white\", fontSize: \"38px\" }} />\n                    </div>\n                    <div className=\"busname\">\n                        <p>Bus Number: {busrelated.busno || \"Not specified\"}</p>\n                    </div>\n                </div>\n\n                <div className=\"pingmybus\">\n                    <button>Pin Bus</button>\n                </div>\n\n                <div className=\"busrelated\">\n                    <div className=\"businnerrelated\">\n                        <div className=\"busmain\">\n                            <BusDetails driverInfo={driverdetails} />\n                        </div>\n\n                        <div className=\"busroute\">\n                            <div className=\"busrouteinner\">\n                                <p className=\"route-heading\">Bus Route</p>\n                                <p className=\"route-description\">\n                                    This bus follows a designated route to ensure efficient travel.\n                                    Below is the detailed roadmap showing the key stops and landmarks.\n                                </p>\n                                <Roadmap steps={stopsparent} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"map\">\n                    <div className=\"mapinner\">\n                        <Track\n                            onLiveTracking={handleLiveTracking}\n                            origin={trackdetails.original}\n                            destination={trackdetails.destination}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {isTracking && (\n                <div className=\"liveTrackingOverlay\">\n                    <h2>Live Tracking</h2>\n                    <button onClick={closeTracking} className=\"closeTrackingButton\">\n                        Close\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Startwork;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}